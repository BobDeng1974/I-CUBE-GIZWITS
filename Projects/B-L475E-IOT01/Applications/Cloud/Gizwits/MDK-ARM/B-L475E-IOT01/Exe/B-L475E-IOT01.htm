<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [B-L475E-IOT01\Exe\B-L475E-IOT01.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image B-L475E-IOT01\Exe\B-L475E-IOT01.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Wed Sep 05 13:41:38 2018
<BR><P>
<H3>Maximum Stack Usage =       3376 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
gagent_test &rArr; userInit &rArr; gagentInit &rArr; gatInit &rArr; gatLocalInit &rArr; gatAuthInit &rArr; gatReqAuthKey &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[39]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[39]">ADC1_2_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[56]">ADC3_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[cb]">APDetectThread</a> from ioftime.o(i.APDetectThread) referenced from ioftime.o(.constdata)
 <LI><a href="#[21]">BusFault_Handler</a> from stm32l4xx_it.o(i.BusFault_Handler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[3b]">CAN1_RX0_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[3c]">CAN1_RX1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[3d]">CAN1_SCE_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[3a]">CAN1_TX_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[67]">COMP_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[64]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[65]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[66]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[51]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[32]">DMA1_Channel1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[33]">DMA1_Channel2_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[34]">DMA1_Channel3_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[35]">DMA1_Channel4_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[36]">DMA1_Channel5_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[37]">DMA1_Channel6_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[38]">DMA1_Channel7_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[5f]">DMA2_Channel1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[60]">DMA2_Channel2_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[61]">DMA2_Channel3_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[62]">DMA2_Channel4_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[63]">DMA2_Channel5_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[6b]">DMA2_Channel6_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[6c]">DMA2_Channel7_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[24]">DebugMon_Handler</a> from stm32l4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[2d]">EXTI0_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[4f]">EXTI15_10_IRQHandler</a> from stm32l4xx_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[2e]">EXTI1_IRQHandler</a> from stm32l4xx_it.o(i.EXTI1_IRQHandler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[2f]">EXTI2_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[30]">EXTI3_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[31]">EXTI4_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[3e]">EXTI9_5_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[2b]">FLASH_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[57]">FMC_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[76]">FPU_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[0]">HTS221_H_Init</a> from hts221.o(i.HTS221_H_Init) referenced 2 times from hts221.o(.data)
 <LI><a href="#[2]">HTS221_H_ReadHumidity</a> from hts221.o(i.HTS221_H_ReadHumidity) referenced 2 times from hts221.o(.data)
 <LI><a href="#[1]">HTS221_H_ReadID</a> from hts221.o(i.HTS221_H_ReadID) referenced 2 times from hts221.o(.data)
 <LI><a href="#[3]">HTS221_T_Init</a> from hts221.o(i.HTS221_T_Init) referenced 2 times from hts221.o(.data)
 <LI><a href="#[4]">HTS221_T_ReadTemp</a> from hts221.o(i.HTS221_T_ReadTemp) referenced 2 times from hts221.o(.data)
 <LI><a href="#[1f]">HardFault_Handler</a> from stm32l4xx_it.o(i.HardFault_Handler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[47]">I2C1_ER_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[46]">I2C1_EV_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[49]">I2C2_ER_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[48]">I2C2_EV_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[70]">I2C3_ER_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[6f]">I2C3_EV_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[68]">LPTIM1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[69]">LPTIM2_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[6d]">LPUART1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[6]">LSM6DSL_AccDeInit</a> from lsm6dsl.o(i.LSM6DSL_AccDeInit) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[5]">LSM6DSL_AccInit</a> from lsm6dsl.o(i.LSM6DSL_AccInit) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[8]">LSM6DSL_AccLowPower</a> from lsm6dsl.o(i.LSM6DSL_AccLowPower) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[7]">LSM6DSL_AccReadID</a> from lsm6dsl.o(i.LSM6DSL_AccReadID) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[9]">LSM6DSL_AccReadXYZ</a> from lsm6dsl.o(i.LSM6DSL_AccReadXYZ) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[b]">LSM6DSL_GyroDeInit</a> from lsm6dsl.o(i.LSM6DSL_GyroDeInit) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[a]">LSM6DSL_GyroInit</a> from lsm6dsl.o(i.LSM6DSL_GyroInit) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[d]">LSM6DSL_GyroLowPower</a> from lsm6dsl.o(i.LSM6DSL_GyroLowPower) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[c]">LSM6DSL_GyroReadID</a> from lsm6dsl.o(i.LSM6DSL_GyroReadID) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[e]">LSM6DSL_GyroReadXYZAngRate</a> from lsm6dsl.o(i.LSM6DSL_GyroReadXYZAngRate) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[c9]">LocaltimerHandler</a> from ioftime.o(i.LocaltimerHandler) referenced from ioftime.o(.constdata)
 <LI><a href="#[20]">MemManage_Handler</a> from stm32l4xx_it.o(i.MemManage_Handler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[1e]">NMI_Handler</a> from stm32l4xx_it.o(i.NMI_Handler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[6a]">OTG_FS_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[28]">PVD_PVM_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[25]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[6e]">QUADSPI_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[2c]">RCC_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[75]">RNG_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[50]">RTC_Alarm_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[2a]">RTC_WKUP_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[1d]">Reset_Handler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[71]">SAI1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[72]">SAI2_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[58]">SDMMC1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[4a]">SPI1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[4b]">SPI2_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[5a]">SPI3_IRQHandler</a> from stm32l4xx_it.o(i.SPI3_IRQHandler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[81]">SPI_2linesRxISR_16BIT</a> from stm32l4xx_hal_spi.o(i.SPI_2linesRxISR_16BIT) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT)
 <LI><a href="#[83]">SPI_2linesRxISR_8BIT</a> from stm32l4xx_hal_spi.o(i.SPI_2linesRxISR_8BIT) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT)
 <LI><a href="#[82]">SPI_2linesTxISR_16BIT</a> from stm32l4xx_hal_spi.o(i.SPI_2linesTxISR_16BIT) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT)
 <LI><a href="#[84]">SPI_2linesTxISR_8BIT</a> from stm32l4xx_hal_spi.o(i.SPI_2linesTxISR_8BIT) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT)
 <LI><a href="#[7e]">SPI_DMAAbortOnError</a> from stm32l4xx_hal_spi.o(i.SPI_DMAAbortOnError) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_IRQHandler)
 <LI><a href="#[7f]">SPI_RxISR_16BIT</a> from stm32l4xx_hal_spi.o(i.SPI_RxISR_16BIT) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_IT)
 <LI><a href="#[80]">SPI_RxISR_8BIT</a> from stm32l4xx_hal_spi.o(i.SPI_RxISR_8BIT) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_IT)
 <LI><a href="#[85]">SPI_TxISR_16BIT</a> from stm32l4xx_hal_spi.o(i.SPI_TxISR_16BIT) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_IT)
 <LI><a href="#[86]">SPI_TxISR_8BIT</a> from stm32l4xx_hal_spi.o(i.SPI_TxISR_8BIT) referenced from stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_IT)
 <LI><a href="#[8d]">SPI_WIFI_DeInit</a> from es_wifi_io.o(i.SPI_WIFI_DeInit) referenced from wifi.o(i.WIFI_Init)
 <LI><a href="#[8c]">SPI_WIFI_Delay</a> from es_wifi_io.o(i.SPI_WIFI_Delay) referenced from wifi.o(i.WIFI_Init)
 <LI><a href="#[8e]">SPI_WIFI_Init</a> from es_wifi_io.o(i.SPI_WIFI_Init) referenced from wifi.o(i.WIFI_Init)
 <LI><a href="#[8a]">SPI_WIFI_ReceiveData</a> from es_wifi_io.o(i.SPI_WIFI_ReceiveData) referenced from wifi.o(i.WIFI_Init)
 <LI><a href="#[8b]">SPI_WIFI_SendData</a> from es_wifi_io.o(i.SPI_WIFI_SendData) referenced from wifi.o(i.WIFI_Init)
 <LI><a href="#[23]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[73]">SWPMI1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[bf]">SensorUploadDataCb</a> from sensors_data.o(i.SensorUploadDataCb) referenced from sensors_data.o(i.sensor_thread)
 <LI><a href="#[c7]">SerialRecThread</a> from iofpthread.o(i.SerialRecThread) referenced from iofpthread.o(.constdata)
 <LI><a href="#[c6]">SerialSendThread</a> from iofpthread.o(i.SerialSendThread) referenced from iofpthread.o(.constdata)
 <LI><a href="#[26]">SysTick_Handler</a> from stm32l4xx_it.o(i.SysTick_Handler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[78]">SystemInit</a> from system_stm32l4xx.o(i.SystemInit) referenced from startup_stm32l475xx.o(.text)
 <LI><a href="#[29]">TAMP_STAMP_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[3f]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[42]">TIM1_CC_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[41]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[40]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[43]">TIM2_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[44]">TIM3_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[45]">TIM4_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[59]">TIM5_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[5d]">TIM6_DAC_IRQHandler</a> from stm32l4xx_it.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[5e]">TIM7_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[52]">TIM8_BRK_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[55]">TIM8_CC_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[54]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[53]">TIM8_UP_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[74]">TSC_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[c5]">TcpDataRecThread</a> from iofpthread.o(i.TcpDataRecThread) referenced from iofpthread.o(.constdata)
 <LI><a href="#[c4]">TcpDataSendThread</a> from iofpthread.o(i.TcpDataSendThread) referenced from iofpthread.o(.constdata)
 <LI><a href="#[ca]">TimerThread</a> from ioftime.o(i.TimerThread) referenced from ioftime.o(.constdata)
 <LI><a href="#[5b]">UART4_IRQHandler</a> from stm32l4xx_it.o(i.UART4_IRQHandler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[5c]">UART5_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[87]">UART_DMAAbortOnError</a> from stm32l4xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[88]">UART_RxISR_16BIT</a> from stm32l4xx_hal_uart.o(i.UART_RxISR_16BIT) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_Receive_IT)
 <LI><a href="#[89]">UART_RxISR_8BIT</a> from stm32l4xx_hal_uart.o(i.UART_RxISR_8BIT) referenced from stm32l4xx_hal_uart.o(i.HAL_UART_Receive_IT)
 <LI><a href="#[4c]">USART1_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[4d]">USART2_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[4e]">USART3_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[22]">UsageFault_Handler</a> from stm32l4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[27]">WWDG_IRQHandler</a> from startup_stm32l475xx.o(.text) referenced from startup_stm32l475xx.o(RESET)
 <LI><a href="#[79]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l475xx.o(.text)
 <LI><a href="#[91]">_dnsResult</a> from gdns.o(i._dnsResult) referenced from gdns.o(i._adapteDnsReq)
 <LI><a href="#[97]">_dnsTick</a> from gdns.o(i._dnsTick) referenced from gdns.o(i.gatDnsTask)
 <LI><a href="#[7b]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[7c]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[7a]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[90]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[b8]">cloudSendDataCb</a> from gatm2m.o(i.cloudSendDataCb) referenced from gatm2m.o(i.gatResCloudCtrl)
 <LI><a href="#[8f]">fputc</a> from main.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[9b]">gagentRebootTimer</a> from localcomm.o(i.gagentRebootTimer) referenced from localcomm.o(i.gatFactoryMode)
 <LI><a href="#[9b]">gagentRebootTimer</a> from localcomm.o(i.gagentRebootTimer) referenced from localcomm.o(i.gatLocalGAgentRestart)
 <LI><a href="#[cc]">gagent_test</a> from gagent_iot_test_basic_connectivity.o(i.gagent_test) referenced from main.o(.constdata)
 <LI><a href="#[a5]">gatAuthCbFun</a> from local.o(i.gatAuthCbFun) referenced from local.o(i.gatLocalInit)
 <LI><a href="#[96]">gatDataSendCb</a> from gagent.o(i.gatDataSendCb) referenced from gagent.o(i.gatDataSend)
 <LI><a href="#[f]">gatDealUserPayload90</a> from gagent.o(i.gatDealUserPayload90) referenced 4 times from cmdtable.o(.data)
 <LI><a href="#[10]">gatDealUserPayload93</a> from gagent.o(i.gatDealUserPayload93) referenced 4 times from cmdtable.o(.data)
 <LI><a href="#[b0]">gatDeviceDisableRecCb</a> from gserver.o(i.gatDeviceDisableRecCb) referenced from gserver.o(i.gatNormalDeviceDisable)
 <LI><a href="#[b4]">gatDownLoadFirmwareCb</a> from otawan.o(i.gatDownLoadFirmwareCb) referenced from otawan.o(i.gatReDownloadTimerCb)
 <LI><a href="#[b4]">gatDownLoadFirmwareCb</a> from otawan.o(i.gatDownLoadFirmwareCb) referenced from otawan.o(i.gatReqLastVersionCb)
 <LI><a href="#[18]">gatEnableBindStart</a> from localcomm.o(i.gatEnableBindStart) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[99]">gatEnableBindTimeOut</a> from localcomm.o(i.gatEnableBindTimeOut) referenced from localcomm.o(i.gatEnableBindStart)
 <LI><a href="#[17]">gatEnterTest</a> from localcomm.o(i.gatEnterTest) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[16]">gatFactoryMode</a> from localcomm.o(i.gatFactoryMode) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[9d]">gatGServerHandleGatStatus</a> from gserver.o(i.gatGServerHandleGatStatus) referenced from gserver.o(i.gatGServerInit)
 <LI><a href="#[1a]">gatGetAuthReqAck</a> from authorization.o(i.gatGetAuthReqAck) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[ba]">gatHTTPRecvTick</a> from httpgat.o(i.gatHTTPRecvTick) referenced from httpgat.o(i.httpConnCb)
 <LI><a href="#[ba]">gatHTTPRecvTick</a> from httpgat.o(i.gatHTTPRecvTick) referenced from httpgat.o(i.httpRecCb)
 <LI><a href="#[a2]">gatLocalErrHandleAckTimeOut</a> from localcomm.o(i.gatLocalErrHandleAckTimeOut) referenced from localcomm.o(i.gatLocalErrHandle)
 <LI><a href="#[19]">gatLocalGAgentRestart</a> from localcomm.o(i.gatLocalGAgentRestart) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[1c]">gatLocalModuleCheck</a> from localcomm.o(i.gatLocalModuleCheck) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[a3]">gatLocalSendStatus</a> from local.o(i.gatLocalSendStatus) referenced from local.o(i.gatLocalInit)
 <LI><a href="#[a6]">gatLocalSignalCheckTick</a> from localcomm.o(i.gatLocalSignalCheckTick) referenced from localcomm.o(i.gatLocalSignalTickStart)
 <LI><a href="#[92]">gatLocalStatusSync</a> from local.o(i.gatLocalStatusSync) referenced from local.o(i.gagentInit)
 <LI><a href="#[15]">gatM2MCommand</a> from gatm2m.o(i.gatM2MCommand) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[a9]">gatM2MHandleGatStatus</a> from gatm2m.o(i.gatM2MHandleGatStatus) referenced from gatm2m.o(i.gatM2MInit)
 <LI><a href="#[aa]">gatM2MReStartServerTimeOut</a> from gatm2m.o(i.gatM2MReStartServerTimeOut) referenced from gatm2m.o(i.gatM2MReStartServer)
 <LI><a href="#[aa]">gatM2MReStartServerTimeOut</a> from gatm2m.o(i.gatM2MReStartServerTimeOut) referenced from gatm2m.o(i.m2mSktConnCb)
 <LI><a href="#[ae]">gatNetEventHandle</a> from gatnet.o(i.gatNetEventHandle) referenced from gatnet.o(i.gatNetInit)
 <LI><a href="#[ad]">gatNetExcepTimeout</a> from gatnet.o(i.gatNetExcepTimeout) referenced from gatnet.o(i.gatNetEventHandle)
 <LI><a href="#[b2]">gatNtpTick</a> from gserver.o(i.gatNtpTick) referenced from gserver.o(i.gatProvisionParse)
 <LI><a href="#[b1]">gatProvisionRecCb</a> from gserver.o(i.gatProvisionRecCb) referenced from gserver.o(i.gatProvision)
 <LI><a href="#[b3]">gatProvisionTimer</a> from gserver.o(i.gatProvisionTimer) referenced from gserver.o(i.gatProvisionRecCb)
 <LI><a href="#[98]">gatReDownloadTimerCb</a> from otawan.o(i.gatReDownloadTimerCb) referenced from otawan.o(i.gatDownLoadFirmwareCb)
 <LI><a href="#[1b]">gatRecAuthKey</a> from authorization.o(i.gatRecAuthKey) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[9f]">gatRegsiterRecCb</a> from gserver.o(i.gatRegsiterRecCb) referenced from gserver.o(i.gatGServerStart)
 <LI><a href="#[9f]">gatRegsiterRecCb</a> from gserver.o(i.gatRegsiterRecCb) referenced from gserver.o(i.gatRegsiterTimer)
 <LI><a href="#[b5]">gatRegsiterTimer</a> from gserver.o(i.gatRegsiterTimer) referenced from gserver.o(i.gatRegsiterRecCb)
 <LI><a href="#[b6]">gatReqAuthKeyTimeOut</a> from authorization.o(i.gatReqAuthKeyTimeOut) referenced from authorization.o(i.gatReqAuthKey)
 <LI><a href="#[b7]">gatReqLastVersionCb</a> from otawan.o(i.gatReqLastVersionCb) referenced from otawan.o(i.gatReqLastVersion)
 <LI><a href="#[11]">gatResCloudCtrl</a> from gatm2m.o(i.gatResCloudCtrl) referenced 4 times from cmdtable.o(.data)
 <LI><a href="#[af]">gatRouterConnTimeout</a> from gatnet.o(i.gatRouterConnTimeout) referenced from gatnet.o(i.gatNetInit)
 <LI><a href="#[9a]">gatTestModeTick</a> from gatnet.o(i.gatTestModeTick) referenced from gatnet.o(i.gatEnterTestMode)
 <LI><a href="#[c0]">gatUserProcess</a> from gagent_iot_test_basic_connectivity.o(i.gatUserProcess) referenced from gagent_iot_test_basic_connectivity.o(i.userInit)
 <LI><a href="#[a0]">gatWaitAuthKeyTimer</a> from authorization.o(i.gatWaitAuthKeyTimer) referenced from authorization.o(i.gatGetAuthReqAck)
 <LI><a href="#[ab]">gatm2mDnsCb</a> from gatm2m.o(i.gatm2mDnsCb) referenced from gatm2m.o(i.gatM2MServerStart)
 <LI><a href="#[9e]">gserverDnsCb</a> from gserver.o(i.gserverDnsCb) referenced from gserver.o(i.gatGServerStart)
 <LI><a href="#[9e]">gserverDnsCb</a> from gserver.o(i.gserverDnsCb) referenced from gserver.o(i.gatProvisionRecCb)
 <LI><a href="#[9e]">gserverDnsCb</a> from gserver.o(i.gserverDnsCb) referenced from gserver.o(i.gatRegsiterTimer)
 <LI><a href="#[9c]">gserverExcepTimeout</a> from gserver.o(i.gserverExcepTimeout) referenced from gserver.o(i.gatGServerHandleGatStatus)
 <LI><a href="#[a1]">httpConnCb</a> from httpgat.o(i.httpConnCb) referenced from httpgat.o(i.gatHttpReq)
 <LI><a href="#[b9]">httpRecCb</a> from httpgat.o(i.httpRecCb) referenced from httpgat.o(i.httpConnCb)
 <LI><a href="#[bb]">httpSendCb</a> from httpgat.o(i.httpSendCb) referenced from httpgat.o(i.httpConnCb)
 <LI><a href="#[7d]">isspace</a> from isspace_o.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[a7]">localRecDataCb</a> from localio.o(i.localRecDataCb) referenced from localio.o(i.gatLocalioInit)
 <LI><a href="#[a4]">localWriteP0</a> from localprotocol.o(i.localWriteP0) referenced from local.o(i.gatLocalInit)
 <LI><a href="#[bd]">m2mSend</a> from gatm2m.o(i.m2mSend) referenced from gatm2m.o(i.m2mSktConnCb)
 <LI><a href="#[ac]">m2mSktConnCb</a> from gatm2m.o(i.m2mSktConnCb) referenced from gatm2m.o(i.gatM2MServerStart)
 <LI><a href="#[bc]">m2mSktRecCb</a> from gatm2m.o(i.m2mSktRecCb) referenced from gatm2m.o(i.m2mSktConnCb)
 <LI><a href="#[77]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[a8]">mqttDoHeartBeat</a> from mqttgat.o(i.mqttDoHeartBeat) referenced from mqttgat.o(i.gatM2MHeartBeatStart)
 <LI><a href="#[14]">onAppOnLineNumCb</a> from gatm2m.o(i.onAppOnLineNumCb) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[13]">onOTA41EventNoticCb</a> from gatm2m.o(i.onOTA41EventNoticCb) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[12]">onOTA4EventNoticCb</a> from gatm2m.o(i.onOTA4EventNoticCb) referenced 2 times from cmdtable.o(.data)
 <LI><a href="#[c1]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[be]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[c2]">prvTimerTask</a> from timers.o(i.prvTimerTask) referenced from timers.o(i.xTimerCreateTimerTask)
 <LI><a href="#[c8]">recv_check_thread</a> from iofsocket.o(i.recv_check_thread) referenced from iofsocket.o(.constdata)
 <LI><a href="#[c3]">sensor_thread</a> from sensors_data.o(i.sensor_thread) referenced from sensors_data.o(.constdata)
 <LI><a href="#[94]">simulatorLanDataUploadCB</a> from simulatorcomm.o(i.simulatorLanDataUploadCB) referenced from simulatorcomm.o(i.gagentUploadData)
 <LI><a href="#[93]">simulatorM2MUploadDataCb</a> from simulatorcomm.o(i.simulatorM2MUploadDataCb) referenced from simulatorcomm.o(i.gagentUploadData)
 <LI><a href="#[95]">simulatorUploadDtatTimeOutCb</a> from simulatorcomm.o(i.simulatorUploadDtatTimeOutCb) referenced from simulatorcomm.o(i.gagentUploadData)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[79]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(.text)
</UL>
<P><STRONG><a name="[397]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[cd]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e1]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[398]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[399]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[39a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[39b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[39c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[23]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[392]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[391]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[25]"></a>PendSV_Handler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[387]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[1d]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l475xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d3]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[7d]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[27a]"></a>tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tolower.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetFileType
</UL>

<P><STRONG><a name="[24f]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCreatNewPassCode
</UL>

<P><STRONG><a name="[24e]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCreatNewPassCode
</UL>

<P><STRONG><a name="[fd]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_update
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userInit
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofWifiScan
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileRead
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareDownloadCb
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketTcpRecv
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestReceiveData
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Encrypt
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Decrypt
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Update
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterParse
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_getdomain_port
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localExtractPacket
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseHead
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpHeader
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpBody
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_publish_with_qos
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_connect
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatUpLoadDataCombine
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttNodeRecInit
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onOTA41EventNoticCb
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MUserDataRecCb
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoExtracFromEnv
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMD5
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetFileType
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostFromUrl
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthKeySet
</UL>

<P><STRONG><a name="[1a4]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofRecSig
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userInit
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofStartAllThread
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensors
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofTimerInit
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketOpen
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_getdomain_port
</UL>

<P><STRONG><a name="[39d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Encrypt
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[39e]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[39f]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisableParse
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDumpEnvInfo
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCreatNewPassCode
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecNodeInit
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseHead
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpBody
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_subscribes
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_publish_with_qos
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_init
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_connect
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatUpLoadDataCombine
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
</UL>

<P><STRONG><a name="[1a2]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateWiFiCredentials
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userInit
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofGatGetHostByName
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterTimer
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterParse
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_getdomain_port
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendNodeInit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecNodeInit
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpBody
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsIpNotFound
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsIpFound
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_init
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttReInit
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttInit
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onOTA41EventNoticCb
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MLoginCb
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResCloudCtrl
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetFileType
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownloadFirmware
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
</UL>

<P><STRONG><a name="[3a0]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[f4]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_SendData
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestSendData
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestReceiveData
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseRescode
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParsingBlkLen
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseHead
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findKey
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MUserDataRecCb
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMD5
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetFileType
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostFromUrl
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[f8]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetModuleName
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetModuleID
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetModuleFwRevision
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ParseInfo
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ParseConnSettings
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_init_auth
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_init
</UL>

<P><STRONG><a name="[f3]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userInit
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestSendData
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestReceiveData
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStart
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strToHex
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisable
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDumpEnvInfo
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpPkgPack
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpPkgLenCalc
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpBody
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWanCmd
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findValue
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findKey
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsResultCb
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_subscribes
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_publish_with_qos
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_connect
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatUpLoadDataCombine
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MUserDataRecCb
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoExtracFromEnv
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetFileType
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostFromUrl
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRecAuthKey
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
</UL>

<P><STRONG><a name="[1f0]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileOpen
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gserverDnsCb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterTimer
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoSetGServerIp
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoSet
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getDnsReqByName
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsRegister
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatm2mDnsCb
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOtaSoftVerify
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[fe]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestReceiveData
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRecAuthKey
</UL>

<P><STRONG><a name="[1f2]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheSSIDSet
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCachePwdSet
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheBSSIDSet
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupSSIDSet
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupPwdSet
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupBSSIDSet
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetM2MDomain
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gserverDnsCb
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetSoftVer
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoSetGServerIp
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoSet
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoInit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsResult
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_subscribes
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatm2mDnsCb
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWanOtaParmReset
</UL>

<P><STRONG><a name="[2fe]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWanCmd
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MUserDataRecCb
</UL>

<P><STRONG><a name="[f7]"></a>strtok</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, strtok.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strtok
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetMACAddress
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_DNS_LookUp
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ParseInfo
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ParseConnSettings
</UL>

<P><STRONG><a name="[d7]"></a>__0sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
</UL>

<P><STRONG><a name="[d9]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[e2]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[db]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMD5
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[de]"></a>strtoul</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = strtoul &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParsingBlkLen
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseHead
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoExtracFromEnv
</UL>

<P><STRONG><a name="[df]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseRescode
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterTimer
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_getdomain_port
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOTAEventHandle
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisable
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoSet
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoExtracFromEnv
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostFromUrl
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[d2]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[3a1]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[3a2]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[d8]"></a>__vfscanf_char</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[7a]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[ce]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[3a3]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>__vfscanf</STRONG> (Thumb, 808 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[3a4]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3a5]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>APDetectThread</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, ioftime.o(i.APDetectThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 2328<LI>Call Chain = APDetectThread &rArr; updateWiFiCredentials &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateWiFiCredentials
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWiFiCredentials
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_IsConnected
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Connect
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ioftime.o(.constdata)
</UL>
<P><STRONG><a name="[1b4]"></a>BSP_ACCELERO_AccGetXYZ</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32l475e_iot01_accelero.o(i.BSP_ACCELERO_AccGetXYZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_ACCELERO_AccGetXYZ
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareMqttPayload
</UL>

<P><STRONG><a name="[30b]"></a>BSP_ACCELERO_Init</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, stm32l475e_iot01_accelero.o(i.BSP_ACCELERO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP_ACCELERO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensors
</UL>

<P><STRONG><a name="[100]"></a>BSP_COM_Init</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, stm32l475e_iot01.o(i.BSP_COM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = BSP_COM_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Console_UART_Init
</UL>

<P><STRONG><a name="[30c]"></a>BSP_HSENSOR_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l475e_iot01_hsensor.o(i.BSP_HSENSOR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_HSENSOR_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensors
</UL>

<P><STRONG><a name="[1b6]"></a>BSP_HSENSOR_ReadHumidity</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32l475e_iot01_hsensor.o(i.BSP_HSENSOR_ReadHumidity))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_HSENSOR_ReadHumidity
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareMqttPayload
</UL>

<P><STRONG><a name="[103]"></a>BSP_LED_Init</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, stm32l475e_iot01.o(i.BSP_LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[104]"></a>BSP_LED_Off</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32l475e_iot01.o(i.BSP_LED_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gizIssuedProcess
</UL>

<P><STRONG><a name="[106]"></a>BSP_LED_On</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32l475e_iot01.o(i.BSP_LED_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_On
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gizIssuedProcess
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[107]"></a>BSP_LED_Toggle</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32l475e_iot01.o(i.BSP_LED_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>

<P><STRONG><a name="[109]"></a>BSP_PB_Init</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, stm32l475e_iot01.o(i.BSP_PB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_PB_Init &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10a]"></a>BSP_TSENSOR_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32l475e_iot01_tsensor.o(i.BSP_TSENSOR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BSP_TSENSOR_Init &rArr; SENSOR_IO_Init &rArr; I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensors
</UL>

<P><STRONG><a name="[1b5]"></a>BSP_TSENSOR_ReadTemp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32l475e_iot01_tsensor.o(i.BSP_TSENSOR_ReadTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_TSENSOR_ReadTemp
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareMqttPayload
</UL>

<P><STRONG><a name="[21]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[10c]"></a>Button_WaitForPush</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, main.o(i.Button_WaitForPush))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Button_WaitForPush
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[10d]"></a>CLOUD_Error_Handler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, gagent_iot_test_basic_connectivity.o(i.CLOUD_Error_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CLOUD_Error_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[24]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[ee]"></a>ES_WIFI_Connect</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, es_wifi.o(i.ES_WIFI_Connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ES_WIFI_Connect &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Connect
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDetectThread
</UL>

<P><STRONG><a name="[110]"></a>ES_WIFI_DNS_LookUp</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, es_wifi.o(i.ES_WIFI_DNS_LookUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ES_WIFI_DNS_LookUp &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseIP
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetHostAddress
</UL>

<P><STRONG><a name="[111]"></a>ES_WIFI_GetMACAddress</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, es_wifi.o(i.ES_WIFI_GetMACAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ES_WIFI_GetMACAddress &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseMAC
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetMAC_Address
</UL>

<P><STRONG><a name="[113]"></a>ES_WIFI_GetNetworkSettings</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, es_wifi.o(i.ES_WIFI_GetNetworkSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ES_WIFI_GetNetworkSettings &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ParseConnSettings
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Connect
</UL>

<P><STRONG><a name="[114]"></a>ES_WIFI_Init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, es_wifi.o(i.ES_WIFI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ES_WIFI_Init &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ParseInfo
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Init
</UL>

<P><STRONG><a name="[eb]"></a>ES_WIFI_IsConnected</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, es_wifi.o(i.ES_WIFI_IsConnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ES_WIFI_IsConnected &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ParseIsConnected
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetIP_Address
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDetectThread
</UL>

<P><STRONG><a name="[116]"></a>ES_WIFI_ReceiveData</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, es_wifi.o(i.ES_WIFI_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ES_WIFI_ReceiveData &rArr; AT_RequestReceiveData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestReceiveData
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReceiveData
</UL>

<P><STRONG><a name="[1e2]"></a>ES_WIFI_RegisterBusIO</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, es_wifi.o(i.ES_WIFI_RegisterBusIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ES_WIFI_RegisterBusIO
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Init
</UL>

<P><STRONG><a name="[117]"></a>ES_WIFI_SendData</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, es_wifi.o(i.ES_WIFI_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ES_WIFI_SendData &rArr; AT_RequestSendData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestSendData
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
</UL>

<P><STRONG><a name="[118]"></a>ES_WIFI_StartClientConnection</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, es_wifi.o(i.ES_WIFI_StartClientConnection))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_OpenClientConnection
</UL>

<P><STRONG><a name="[119]"></a>ES_WIFI_StopClientConnection</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, es_wifi.o(i.ES_WIFI_StopClientConnection))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_CloseClientConnection
</UL>

<P><STRONG><a name="[4f]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32l4xx_it.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EXTI15_10_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; SPI_WIFI_ISR &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l4xx_it.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EXTI1_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; SPI_WIFI_ISR &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[11b]"></a>Error_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Error_Handler &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[13d]"></a>FLASH_FlushCaches</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_FlushCaches))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[13c]"></a>FLASH_PageErase</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_PageErase))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[11e]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, stm32l4xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetErrorCode
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRPConfig
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_UserConfig
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_RDPConfig
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_PCROPConfig
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_OB_Launch
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[12a]"></a>FLASH_get_bank</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, flash_l4.o(i.FLASH_get_bank))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_unlock_erase
</UL>

<P><STRONG><a name="[12b]"></a>FLASH_get_pageInBank</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, flash_l4.o(i.FLASH_get_pageInBank))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_get_pageInBank
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_unlock_erase
</UL>

<P><STRONG><a name="[123]"></a>FLASH_set_boot_bank</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, flash_l4.o(i.FLASH_set_boot_bank))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = FLASH_set_boot_bank &rArr; HAL_FLASHEx_OBProgram &rArr; FLASH_OB_PCROPConfig &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_OB_Unlock
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_OB_Launch
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBProgram
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBGetConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareDownloadCb
</UL>

<P><STRONG><a name="[129]"></a>FLASH_unlock_erase</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, flash_l4.o(i.FLASH_unlock_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FLASH_unlock_erase &rArr; HAL_FLASHEx_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_get_bank
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_get_pageInBank
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_update
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileErase
</UL>

<P><STRONG><a name="[12d]"></a>FLASH_update</STRONG> (Thumb, 186 bytes, Stack size 2088 bytes, flash_l4.o(i.FLASH_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 2176<LI>Call Chain = FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_unlock_erase
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_write_at
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateWiFiCredentials
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileWrite
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareDownloadCb
</UL>

<P><STRONG><a name="[12e]"></a>FLASH_write_at</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, flash_l4.o(i.FLASH_write_at))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_update
</UL>

<P><STRONG><a name="[130]"></a>FirmwareDownloadCb</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, ioffile.o(i.FirmwareDownloadCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 2184<LI>Call Chain = FirmwareDownloadCb &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_update
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_set_boot_bank
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devOtaUpgrade
</UL>

<P><STRONG><a name="[134]"></a>GAgentEnableBind</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, local.o(i.GAgentEnableBind))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GAgentEnableBind &rArr; gatEnableBindStart &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnableBindStart
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userInit
</UL>

<P><STRONG><a name="[139]"></a>GAgent_MD5Decode</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gagent_md5.o(i.GAgent_MD5Decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAgent_MD5Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Transform
</UL>

<P><STRONG><a name="[136]"></a>GAgent_MD5Encode</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gagent_md5.o(i.GAgent_MD5Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAgent_MD5Encode
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Final
</UL>

<P><STRONG><a name="[135]"></a>GAgent_MD5Final</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, gagent_md5.o(i.GAgent_MD5Final))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = GAgent_MD5Final &rArr; GAgent_MD5Update &rArr; GAgent_MD5Transform &rArr; GAgent_MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Update
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Encode
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[25f]"></a>GAgent_MD5Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gagent_md5.o(i.GAgent_MD5Init))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[138]"></a>GAgent_MD5Transform</STRONG> (Thumb, 1898 bytes, Stack size 284 bytes, gagent_md5.o(i.GAgent_MD5Transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = GAgent_MD5Transform &rArr; GAgent_MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Update
</UL>

<P><STRONG><a name="[137]"></a>GAgent_MD5Update</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, gagent_md5.o(i.GAgent_MD5Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = GAgent_MD5Update &rArr; GAgent_MD5Transform &rArr; GAgent_MD5Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Transform
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Final
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[13a]"></a>GetDevTime_S</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ioftime.o(i.GetDevTime_S))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetDevTime_S
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDnsTask
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsRegister
</UL>

<P><STRONG><a name="[174]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32l4xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[11c]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32l4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ResetModule
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_Delay
</UL>

<P><STRONG><a name="[12c]"></a>HAL_FLASHEx_Erase</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, stm32l4xx_hal_flash_ex.o(i.HAL_FLASHEx_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_FLASHEx_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_MassErase
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_FlushCaches
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_unlock_erase
</UL>

<P><STRONG><a name="[126]"></a>HAL_FLASHEx_OBGetConfig</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32l4xx_hal_flash_ex.o(i.HAL_FLASHEx_OBGetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_FLASHEx_OBGetConfig &rArr; FLASH_OB_GetPCROP
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_GetWRP
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_GetUser
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_GetRDP
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_GetPCROP
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_set_boot_bank
</UL>

<P><STRONG><a name="[127]"></a>HAL_FLASHEx_OBProgram</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, stm32l4xx_hal_flash_ex.o(i.HAL_FLASHEx_OBProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_FLASHEx_OBProgram &rArr; FLASH_OB_PCROPConfig &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRPConfig
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_UserConfig
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_RDPConfig
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_PCROPConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_set_boot_bank
</UL>

<P><STRONG><a name="[128]"></a>HAL_FLASH_OB_Launch</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32l4xx_hal_flash.o(i.HAL_FLASH_OB_Launch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_FLASH_OB_Launch &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_set_boot_bank
</UL>

<P><STRONG><a name="[125]"></a>HAL_FLASH_OB_Unlock</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32l4xx_hal_flash.o(i.HAL_FLASH_OB_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_set_boot_bank
</UL>

<P><STRONG><a name="[12f]"></a>HAL_FLASH_Program</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, stm32l4xx_hal_flash.o(i.HAL_FLASH_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_FlushCaches
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_Fast
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_DoubleWord
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_write_at
</UL>

<P><STRONG><a name="[124]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32l4xx_hal_flash.o(i.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_unlock_erase
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_set_boot_bank
</UL>

<P><STRONG><a name="[144]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; SPI_WIFI_ISR &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ISR
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[11a]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; SPI_WIFI_ISR &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[101]"></a>HAL_GPIO_Init</STRONG> (Thumb, 484 bytes, Stack size 20 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_COM_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UART4_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_MspInit
</UL>

<P><STRONG><a name="[1ca]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ResetModule
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ReceiveData
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_cmddata_rdy_high
</UL>

<P><STRONG><a name="[108]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>

<P><STRONG><a name="[105]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ResetModule
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_SendData
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ReceiveData
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_MspInit
</UL>

<P><STRONG><a name="[ef]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_WaitForPush
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Refresh_Count_Test
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialSelect
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_thread
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_DelayUs
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerEventHandler
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDevTime_MS
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDevTime_S
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDetectThread
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ResetModule
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_cmddata_rdy_high
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTx_ISR
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRx_ISR
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRxTx_ISR
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[1aa]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c_ex.o(i.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[147]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
</UL>

<P><STRONG><a name="[149]"></a>HAL_I2C_Init</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[14b]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 434 bytes, Stack size 48 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>

<P><STRONG><a name="[150]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 436 bytes, Stack size 48 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_WriteMultiple
</UL>

<P><STRONG><a name="[148]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[14a]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[153]"></a>HAL_IWDG_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32l4xx_hal_iwdg.o(i.HAL_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
</UL>

<P><STRONG><a name="[234]"></a>HAL_IWDG_Refresh</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l4xx_hal_iwdg.o(i.HAL_IWDG_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[18a]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[154]"></a>HAL_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32l4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[156]"></a>HAL_InitTick</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, stm32l4xx_hal_timebase_tim.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[157]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[e6]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADO_UART4_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_Init
</UL>

<P><STRONG><a name="[e5]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADO_UART4_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_Init
</UL>

<P><STRONG><a name="[155]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[133]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.HAL_NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareDownloadCb
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devRestart
</UL>

<P><STRONG><a name="[1d2]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1b7]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_pwr_ex.o(i.HAL_PWREx_GetVoltageRange))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>

<P><STRONG><a name="[1d3]"></a>HAL_RCCEx_EnableMSIPLLMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc_ex.o(i.HAL_RCCEx_EnableMSIPLLMode))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[15e]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 1230 bytes, Stack size 32 bytes, stm32l4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI2_Config
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLLSAI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[161]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 458 bytes, Stack size 16 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[158]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[163]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
</UL>

<P><STRONG><a name="[159]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[164]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[162]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 252 bytes, Stack size 20 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[165]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1558 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[167]"></a>HAL_RNG_Init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, stm32l4xx_hal_rng.o(i.HAL_RNG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RNG_Init &rArr; HAL_RNG_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RNG_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[168]"></a>HAL_RNG_MspInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l4xx_hal_msp.o(i.HAL_RNG_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RNG_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RNG_Init
</UL>

<P><STRONG><a name="[169]"></a>HAL_RTC_Init</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[16a]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l4xx_hal_msp.o(i.HAL_RTC_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[16d]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[170]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[16c]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[171]"></a>HAL_SPI_DeInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SPI_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_DeInit
</UL>

<P><STRONG><a name="[175]"></a>HAL_SPI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAAbortOnError
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTx_ISR
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRx_ISR
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRxTx_ISR
</UL>

<P><STRONG><a name="[173]"></a>HAL_SPI_IRQHandler</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SPI_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_IRQHandler
</UL>

<P><STRONG><a name="[176]"></a>HAL_SPI_Init</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_Init
</UL>

<P><STRONG><a name="[172]"></a>HAL_SPI_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>

<P><STRONG><a name="[177]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[178]"></a>HAL_SPI_Receive</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ResetModule
</UL>

<P><STRONG><a name="[17b]"></a>HAL_SPI_Receive_IT</STRONG> (Thumb, 226 bytes, Stack size 20 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SPI_Receive_IT &rArr; HAL_SPI_TransmitReceive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ReceiveData
</UL>

<P><STRONG><a name="[17d]"></a>HAL_SPI_RxCpltCallback</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, es_wifi_io.o(i.HAL_SPI_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_SPI_RxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRx_ISR
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRxTx_ISR
</UL>

<P><STRONG><a name="[179]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 648 bytes, Stack size 48 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>

<P><STRONG><a name="[17c]"></a>HAL_SPI_TransmitReceive_IT</STRONG> (Thumb, 240 bytes, Stack size 20 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_SPI_TransmitReceive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_IT
</UL>

<P><STRONG><a name="[1cc]"></a>HAL_SPI_Transmit_IT</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_SPI_Transmit_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_SendData
</UL>

<P><STRONG><a name="[17f]"></a>HAL_SPI_TxCpltCallback</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, es_wifi_io.o(i.HAL_SPI_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_SPI_TxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTx_ISR
</UL>

<P><STRONG><a name="[1bc]"></a>HAL_SPI_TxRxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_spi.o(i.HAL_SPI_TxRxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRxTx_ISR
</UL>

<P><STRONG><a name="[187]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[189]"></a>HAL_TIMEx_CommutationCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutationCallback))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[15a]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_Base_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[180]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[15b]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[183]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[182]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutationCallback
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[184]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[185]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[186]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32l4xx_hal_timebase_tim.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[188]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[18e]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[18d]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[18b]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 402 bytes, Stack size 24 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[102]"></a>HAL_UART_Init</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_COM_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UART4_Init
</UL>

<P><STRONG><a name="[190]"></a>HAL_UART_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[194]"></a>HAL_UART_Receive</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_UART_Receive &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[197]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialOpen
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[196]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, iofserial.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
</UL>

<P><STRONG><a name="[198]"></a>HAL_UART_Transmit</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_write
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[1d8]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
</UL>

<P><STRONG><a name="[0]"></a>HTS221_H_Init</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, hts221.o(i.HTS221_H_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = HTS221_H_Init &rArr; SENSOR_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Write
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>HTS221_H_ReadHumidity</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, hts221.o(i.HTS221_H_ReadHumidity))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = HTS221_H_ReadHumidity &rArr; SENSOR_IO_ReadMultiple &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_ReadMultiple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>HTS221_H_ReadID</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hts221.o(i.HTS221_H_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = HTS221_H_ReadID &rArr; SENSOR_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>HTS221_T_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, hts221.o(i.HTS221_T_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = HTS221_T_Init &rArr; SENSOR_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Write
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>HTS221_T_ReadTemp</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, hts221.o(i.HTS221_T_ReadTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HTS221_T_ReadTemp &rArr; SENSOR_IO_ReadMultiple &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_ReadMultiple
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[19c]"></a>Http_Decrypt_RES</STRONG> (Thumb, 290 bytes, Stack size 56 bytes, gserver.o(i.Http_Decrypt_RES))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Http_Decrypt_RES &rArr; aesECB128Decrypt &rArr; inv_cipher &rArr; inv_mix_columns &rArr; coef_mult &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesInit
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Decrypt
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDestroy
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strToHex
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterParse
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
</UL>

<P><STRONG><a name="[6]"></a>LSM6DSL_AccDeInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lsm6dsl.o(i.LSM6DSL_AccDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = LSM6DSL_AccDeInit &rArr; SENSOR_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Write
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>LSM6DSL_AccInit</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl.o(i.LSM6DSL_AccInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LSM6DSL_AccInit &rArr; SENSOR_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Write
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>LSM6DSL_AccLowPower</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lsm6dsl.o(i.LSM6DSL_AccLowPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LSM6DSL_AccLowPower &rArr; SENSOR_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Write
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>LSM6DSL_AccReadID</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6dsl.o(i.LSM6DSL_AccReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LSM6DSL_AccReadID &rArr; SENSOR_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>LSM6DSL_AccReadXYZ</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, lsm6dsl.o(i.LSM6DSL_AccReadXYZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DSL_AccReadXYZ &rArr; SENSOR_IO_ReadMultiple &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_ReadMultiple
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>LSM6DSL_GyroDeInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lsm6dsl.o(i.LSM6DSL_GyroDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = LSM6DSL_GyroDeInit &rArr; SENSOR_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Write
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>LSM6DSL_GyroInit</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl.o(i.LSM6DSL_GyroInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LSM6DSL_GyroInit &rArr; SENSOR_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Write
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>LSM6DSL_GyroLowPower</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lsm6dsl.o(i.LSM6DSL_GyroLowPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LSM6DSL_GyroLowPower &rArr; SENSOR_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Write
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>LSM6DSL_GyroReadID</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6dsl.o(i.LSM6DSL_GyroReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LSM6DSL_GyroReadID &rArr; SENSOR_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>LSM6DSL_GyroReadXYZAngRate</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, lsm6dsl.o(i.LSM6DSL_GyroReadXYZAngRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DSL_GyroReadXYZAngRate &rArr; SENSOR_IO_ReadMultiple &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_ReadMultiple
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[c9]"></a>LocaltimerHandler</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ioftime.o(i.LocaltimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LocaltimerHandler &rArr; gatLocalRecTimerOutHandle &rArr; iofLocalTimerMSStart &rArr; osTimerCreate &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ioftime.o(.constdata)
</UL>
<P><STRONG><a name="[20]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[1b3]"></a>PrepareMqttPayload</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, sensors_data.o(i.PrepareMqttPayload))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PrepareMqttPayload &rArr; BSP_TSENSOR_ReadTemp
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TSENSOR_ReadTemp
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HSENSOR_ReadHumidity
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_AccGetXYZ
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_thread
</UL>

<P><STRONG><a name="[16f]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l4xx_hal_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[16e]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l4xx_hal_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[16b]"></a>RTC_EnterInitMode</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32l4xx_hal_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[1b9]"></a>Rcon</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, aes.o(i.Rcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Rcon &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmult
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_expansion
</UL>

<P><STRONG><a name="[10b]"></a>SENSOR_IO_Init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l475e_iot01.o(i.SENSOR_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SENSOR_IO_Init &rArr; I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TSENSOR_Init
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GyroReadID
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_AccReadID
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_ReadID
</UL>

<P><STRONG><a name="[199]"></a>SENSOR_IO_Read</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, stm32l475e_iot01.o(i.SENSOR_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SENSOR_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GyroReadXYZAngRate
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GyroReadID
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GyroLowPower
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GyroInit
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GyroDeInit
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_AccReadXYZ
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_AccReadID
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_AccLowPower
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_AccInit
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_AccDeInit
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_ReadTemp
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Init
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_ReadID
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Init
</UL>

<P><STRONG><a name="[19b]"></a>SENSOR_IO_ReadMultiple</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, stm32l475e_iot01.o(i.SENSOR_IO_ReadMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SENSOR_IO_ReadMultiple &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GyroReadXYZAngRate
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_AccReadXYZ
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_ReadTemp
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_ReadHumidity
</UL>

<P><STRONG><a name="[19a]"></a>SENSOR_IO_Write</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, stm32l475e_iot01.o(i.SENSOR_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SENSOR_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_WriteMultiple
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GyroLowPower
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GyroInit
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GyroDeInit
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_AccLowPower
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_AccInit
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_AccDeInit
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_T_Init
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_H_Init
</UL>

<P><STRONG><a name="[5a]"></a>SPI3_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l4xx_it.o(i.SPI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI3_IRQHandler &rArr; HAL_SPI_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>SPI_WIFI_DeInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, es_wifi_io.o(i.SPI_WIFI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SPI_WIFI_DeInit &rArr; osSemaphoreDelete &rArr; vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreDelete
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi.o(i.WIFI_Init)
</UL>
<P><STRONG><a name="[8c]"></a>SPI_WIFI_Delay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, es_wifi_io.o(i.SPI_WIFI_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WIFI_Delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi.o(i.WIFI_Init)
</UL>
<P><STRONG><a name="[146]"></a>SPI_WIFI_ISR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, es_wifi_io.o(i.SPI_WIFI_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SPI_WIFI_ISR &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[8e]"></a>SPI_WIFI_Init</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, es_wifi_io.o(i.SPI_WIFI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = SPI_WIFI_Init &rArr; SPI_WIFI_ResetModule &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_DelayUs
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ResetModule
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexCreate
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_MspInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi.o(i.WIFI_Init)
</UL>
<P><STRONG><a name="[1c4]"></a>SPI_WIFI_MspInit</STRONG> (Thumb, 320 bytes, Stack size 32 bytes, es_wifi_io.o(i.SPI_WIFI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPI_WIFI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_Init
</UL>

<P><STRONG><a name="[8a]"></a>SPI_WIFI_ReceiveData</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, es_wifi_io.o(i.SPI_WIFI_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SPI_WIFI_ReceiveData &rArr; SPI_WIFI_ResetModule &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_DelayUs
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ResetModule
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_IT
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_spi_rx_event
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_cmddata_rdy_rising_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi.o(i.WIFI_Init)
</UL>
<P><STRONG><a name="[1c7]"></a>SPI_WIFI_ResetModule</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, es_wifi_io.o(i.SPI_WIFI_ResetModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SPI_WIFI_ResetModule &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_DelayUs
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ReceiveData
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_Init
</UL>

<P><STRONG><a name="[8b]"></a>SPI_WIFI_SendData</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, es_wifi_io.o(i.SPI_WIFI_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SPI_WIFI_SendData &rArr; wait_spi_tx_event &rArr; osSemaphoreWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_DelayUs
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_IT
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_spi_tx_event
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_cmddata_rdy_high
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi.o(i.WIFI_Init)
</UL>
<P><STRONG><a name="[bf]"></a>SensorUploadDataCb</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, sensors_data.o(i.SensorUploadDataCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SensorUploadDataCb &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensors_data.o(i.sensor_thread)
</UL>
<P><STRONG><a name="[c7]"></a>SerialRecThread</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, iofpthread.o(i.SerialRecThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = SerialRecThread &rArr; gatSerialRecHandle &rArr; iofSerialRead &rArr; serial_read
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialRecHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iofpthread.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>SerialSendThread</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, iofpthread.o(i.SerialSendThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = SerialSendThread &rArr; gatSerialSendHandle &rArr; iofLocalTimerMSStart &rArr; osTimerCreate &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iofpthread.o(.constdata)
</UL>
<P><STRONG><a name="[26]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysTick_Handler &rArr; osSystickHandler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSystickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>SystemInit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_stm32l4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l4xx_it.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[181]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, stm32l4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[c5]"></a>TcpDataRecThread</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, iofpthread.o(i.TcpDataRecThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = TcpDataRecThread &rArr; gatTcpReceiveHandle &rArr; gatTcpRecvDispatch &rArr; gatTcpRecv &rArr; gatTcpDelChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReceiveHandle
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iofpthread.o(.constdata)
</UL>
<P><STRONG><a name="[c4]"></a>TcpDataSendThread</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, iofpthread.o(i.TcpDataSendThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = TcpDataSendThread &rArr; gatTcpDataSendHandle &rArr; gatTcpSendTask &rArr; gatIofTcpSend &rArr; WIFI_SendData &rArr; ES_WIFI_SendData &rArr; AT_RequestSendData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDataSendHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iofpthread.o(.constdata)
</UL>
<P><STRONG><a name="[ca]"></a>TimerThread</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ioftime.o(i.TimerThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = TimerThread &rArr; timerCb &rArr; gatTimerTick &rArr; timerTriggerNotifyLp &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerEventHandler
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerCb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ioftime.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>UART4_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32l4xx_it.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART4_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[192]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[193]"></a>UART_CheckIdleState</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[191]"></a>UART_SetConfig</STRONG> (Thumb, 1158 bytes, Stack size 40 bytes, stm32l4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[195]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32l4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[22]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l475xx.o(RESET)
</UL>
<P><STRONG><a name="[1d9]"></a>WIFI_CloseClientConnection</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, wifi.o(i.WIFI_CloseClientConnection))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_StopClientConnection
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_socket_close
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
</UL>

<P><STRONG><a name="[1da]"></a>WIFI_Connect</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, wifi.o(i.WIFI_Connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WIFI_Connect &rArr; ES_WIFI_Connect &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Connect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetNetworkSettings
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_init
</UL>

<P><STRONG><a name="[1db]"></a>WIFI_GetHostAddress</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wifi.o(i.WIFI_GetHostAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WIFI_GetHostAddress &rArr; ES_WIFI_DNS_LookUp &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_DNS_LookUp
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_connect
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofGetHostByName
</UL>

<P><STRONG><a name="[1dc]"></a>WIFI_GetIP_Address</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wifi.o(i.WIFI_GetIP_Address))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WIFI_GetIP_Address &rArr; ES_WIFI_IsConnected &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_IsConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_get_ip_address
</UL>

<P><STRONG><a name="[1dd]"></a>WIFI_GetMAC_Address</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wifi.o(i.WIFI_GetMAC_Address))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WIFI_GetMAC_Address &rArr; ES_WIFI_GetMACAddress &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetMACAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_init
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetMACGet
</UL>

<P><STRONG><a name="[1de]"></a>WIFI_GetModuleFwRevision</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wifi.o(i.WIFI_GetModuleFwRevision))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WIFI_GetModuleFwRevision &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_init
</UL>

<P><STRONG><a name="[1df]"></a>WIFI_GetModuleID</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wifi.o(i.WIFI_GetModuleID))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WIFI_GetModuleID &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_init
</UL>

<P><STRONG><a name="[1e0]"></a>WIFI_GetModuleName</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wifi.o(i.WIFI_GetModuleName))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WIFI_GetModuleName &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_init
</UL>

<P><STRONG><a name="[1e1]"></a>WIFI_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wifi.o(i.WIFI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WIFI_Init &rArr; ES_WIFI_Init &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_RegisterBusIO
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_init
</UL>

<P><STRONG><a name="[1e3]"></a>WIFI_OpenClientConnection</STRONG> (Thumb, 94 bytes, Stack size 56 bytes, wifi.o(i.WIFI_OpenClientConnection))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_StartClientConnection
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_connect
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
</UL>

<P><STRONG><a name="[1e4]"></a>WIFI_ReceiveData</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, wifi.o(i.WIFI_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = WIFI_ReceiveData &rArr; ES_WIFI_ReceiveData &rArr; AT_RequestReceiveData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_socket_recv
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_check_thread
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketTcpRecv
</UL>

<P><STRONG><a name="[1e5]"></a>WIFI_SendData</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, wifi.o(i.WIFI_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = WIFI_SendData &rArr; ES_WIFI_SendData &rArr; AT_RequestSendData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_socket_send
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofTcpSend
</UL>

<P><STRONG><a name="[1e6]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3a6]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[e7]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_socket_recv
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_update
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateWiFiCredentials
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getInputString
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_credential
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofRecSig
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkevtCbRegister
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gizWiFiStatus
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gizIssuedProcess
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatUserProcess
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOUD_Error_Handler
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialSend
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialOpen
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialInit
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReceiveHandle
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDataSendHandle
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialRecHandle
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusSet
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofWifiScan
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofGatGetHostByName
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetStartScan
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetSoftApStart
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofNetInit
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_unlock_erase
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_set_boot_bank
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileWrite
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareDownloadCb
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devOtaUpgrade
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensors
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorUploadDataCb
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_write_at
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpTrigSend
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localTrigSend
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTraversal
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofTimerInit
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLocalTimerMSStop
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLocalTimerMSStart
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDetectThread
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketTcpRecv
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_SendData
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_ReceiveData
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseRescode
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetM2MPort
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetM2MDomain
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStart
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostByName
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gserverExcepTimeout
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gserverDnsCb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterTimer
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterRecCb
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterParse
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisableParse
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerHandleGatStatus
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDeviceDisableRecCb
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_getdomain_port
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecvDispatch
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReadRecData
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpListenAdd
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDelChNode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecResult
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulatorUploadDtatTimeOutCb
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulatorM2MUploadDataCb
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulatorUploadDtatCb
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulatorLanDataUploadCB
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalGAgentRestart
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTestModeTick
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnterTestMode
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetExcepTimeout
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofAuthKeyRead
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatFactoryMode
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnableBindStart
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthInit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalStatusSync
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSendStatus
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalErrHandle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendCBHandle
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpRecHandle
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sktConnHandle
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_num_rem_len_bytes_safe
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSigHandle
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOTAEventHandle
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisable
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLanSend
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCloudGizDataSend
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetSoftVer
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataInit
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReBoot
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload90
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSendCb
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataRecCb
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEnvErase
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetSoftVer
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvWrite
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvRead
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimeZoneSecSet
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoSetGServerIp
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoSet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDumpEnvInfo
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCreatNewPassCode
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigFlagSet
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpPkgPack
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpPkgLenCalc
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParsingBlkLen
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseHead
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpBody
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHTTPRecvTick
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDpEntry
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWanCmd
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKeyValueCustom
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dnsDataDump
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getDnsReqByName
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsTick
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsResult
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsRegister
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsIpNotFound
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsIpFound
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_subscribes
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_publish_with_qos
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_connect
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatUpLoadDataCombine
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDoHeartBeat
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDataHandle
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttNodeRecInit
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttSubTopicS
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttConnBrokerInit
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttReInit
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttInit
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHeartBeatStop
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHeartBeatStart
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dpTrans
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onOTA4EventNoticCb
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onOTA41EventNoticCb
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MUserDataRecCb
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MSubTopicCb
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MLoginCb
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MHeartBeatCb
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onAppOnLineNumCb
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktRecCb
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktConnCb
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoSet
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResCloudCtrl
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MSocketConnect
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStop
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServer
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MCommand
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cloudSendDataCb
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSend
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatm2mDnsCb
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHandleGatStatus
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoExtracFromEnv
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerHandle
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerCoreInit
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerUpdataExpire
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerTriggerNotifyLp
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerNodeInit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkInit
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkEventHandle
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWanOtaStatusGet
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMD5
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetFileType
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWanOtaStatusSet
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWanOtaParmReset
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReDownloadTimerCb
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOtaSoftVerify
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostFromUrl
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownloadFirmware
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWrite
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSignalCheckTick
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalErrHandleAckTimeOut
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnterTest
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnableBindTimeOut
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentRebootTimer
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRecAuthKey
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetAuthReqAck
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWaitAuthKeyTimer
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKeyTimeOut
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthKeySet
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendCb
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelSendNode
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelRecNode
</UL>

<P><STRONG><a name="[1e8]"></a>__0sprintf$8</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3a7]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[10f]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetMACGet
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSaveRebootReason
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_IsConnected
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Connect
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_StopClientConnection
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_StartClientConnection
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_SendData
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_ReceiveData
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetNetworkSettings
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetMACAddress
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_DNS_LookUp
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexToStr
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisable
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimeZoneSecSet
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigFlagSet
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpPkgPack
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MLoginCb
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResCloudCtrl
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownloadFirmware
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
</UL>

<P><STRONG><a name="[dd]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecvDispatch
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[3a8]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[29b]"></a>__gatListAdd</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gatlist.o(i.__gatListAdd))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAddTail
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAdd
</UL>

<P><STRONG><a name="[29c]"></a>__gatListDel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gatlist.o(i.__gatListDel))
<BR><BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
</UL>

<P><STRONG><a name="[3a9]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[3aa]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3ab]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1fd]"></a>add_round_key</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, aes.o(i.add_round_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = add_round_key
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cipher
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cipher
</UL>

<P><STRONG><a name="[1a0]"></a>aesDestroy</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, aes.o(i.aesDestroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = aesDestroy &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
</UL>

<P><STRONG><a name="[19f]"></a>aesECB128Decrypt</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, aes.o(i.aesECB128Decrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = aesECB128Decrypt &rArr; inv_cipher &rArr; inv_mix_columns &rArr; coef_mult &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_expansion
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cipher
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
</UL>

<P><STRONG><a name="[1f9]"></a>aesECB128Encrypt</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, aes.o(i.aesECB128Encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = aesECB128Encrypt &rArr; cipher &rArr; mix_columns &rArr; coef_mult &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_expansion
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cipher
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
</UL>

<P><STRONG><a name="[19d]"></a>aesInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, aes.o(i.aesInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = aesInit &rArr; invSboxInit &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sboxAssign
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSboxInit
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
</UL>

<P><STRONG><a name="[302]"></a>checkCPUendian</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, iofdev.o(i.checkCPUendian))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checkCPUendian
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htonl
</UL>

<P><STRONG><a name="[e9]"></a>checkWiFiCredentials</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, iot_flash_config.o(i.checkWiFiCredentials))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = checkWiFiCredentials
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDetectThread
</UL>

<P><STRONG><a name="[1fa]"></a>cipher</STRONG> (Thumb, 172 bytes, Stack size 44 bytes, aes.o(i.cipher))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = cipher &rArr; mix_columns &rArr; coef_mult &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sub_bytes
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shift_rows
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_columns
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_round_key
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Encrypt
</UL>

<P><STRONG><a name="[b8]"></a>cloudSendDataCb</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gatm2m.o(i.cloudSendDataCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = cloudSendDataCb &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatm2m.o(i.gatResCloudCtrl)
</UL>
<P><STRONG><a name="[327]"></a>coef_add</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, aes.o(i.coef_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = coef_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_expansion
</UL>

<P><STRONG><a name="[201]"></a>coef_mult</STRONG> (Thumb, 178 bytes, Stack size 20 bytes, aes.o(i.coef_mult))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = coef_mult &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmult
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_columns
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_mix_columns
</UL>

<P><STRONG><a name="[202]"></a>devOtaUpgrade</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, iofdev.o(i.devOtaUpgrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 2576<LI>Call Chain = devOtaUpgrade &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSaveRebootReason
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareDownloadCb
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[204]"></a>devRestart</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, iofdev.o(i.devRestart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = devRestart
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReBoot
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MCommand
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentRebootTimer
</UL>

<P><STRONG><a name="[228]"></a>dev_free_heap_size</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, iofdev.o(i.dev_free_heap_size))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
</UL>

<P><STRONG><a name="[1f1]"></a>dnsDataDump</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, gdns.o(i.dnsDataDump))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dnsDataDump &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostByName
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsResult
</UL>

<P><STRONG><a name="[205]"></a>dpTrans</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, dp.o(i.dpTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dpTrans &rArr; getWanCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDpEntry
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWanCmd
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLanCmd
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDevCmd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MUserDataRecCb
</UL>

<P><STRONG><a name="[20a]"></a>dumpPruductInfo</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, productinfo.o(i.dumpPruductInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dumpPruductInfo &rArr; gatGetSoftVer &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheSSIDGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCachePwdGet
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheBSSIDGet
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupSSIDGet
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupPwdGet
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupBSSIDGet
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetSoftVer
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryptDisplay
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
</UL>

<P><STRONG><a name="[214]"></a>eTaskGetState</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, tasks.o(i.eTaskGetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = eTaskGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadIsSuspended
</UL>

<P><STRONG><a name="[20d]"></a>encryptDisplay</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gatutilcode.o(i.encryptDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterParse
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataRecCb
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResCloudCtrl
</UL>

<P><STRONG><a name="[217]"></a>fgetc</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main.o(i.fgetc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = fgetc &rArr; HAL_UART_Receive &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
</UL>

<P><STRONG><a name="[8f]"></a>fputc</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, main.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = fputc &rArr; osSemaphoreWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[21e]"></a>gagentInit</STRONG> (Thumb, 528 bytes, Stack size 56 bytes, local.o(i.gagentInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 3048<LI>Call Chain = gagentInit &rArr; gatInit &rArr; gatLocalInit &rArr; gatAuthInit &rArr; gatReqAuthKey &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devRestart
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetSoftVer
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetSoftVer
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryptDisplay
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoSet
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userInit
</UL>

<P><STRONG><a name="[226]"></a>gagentUploadData</STRONG> (Thumb, 910 bytes, Stack size 160 bytes, simulatorcomm.o(i.gagentUploadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = gagentUploadData &rArr; gatCloudGizDataSend &rArr; mqttSendPubData &rArr; mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_free_heap_size
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLanSend
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLanLoginClientNumGet
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCloudGizDataSend
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryptDisplay
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusGet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_thread
</UL>

<P><STRONG><a name="[cc]"></a>gagent_test</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, gagent_iot_test_basic_connectivity.o(i.gagent_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 3376<LI>Call Chain = gagent_test &rArr; userInit &rArr; gagentInit &rArr; gatInit &rArr; gatLocalInit &rArr; gatAuthInit &rArr; gatReqAuthKey &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_init
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_get_ip_address
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_credential
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofRecSig
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMainLoop
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_get_bank
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_WaitForPush
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userInit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOUD_Error_Handler
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Refresh_Count_Test
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>gatAuthCbFun</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, local.o(i.gatAuthCbFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gatAuthCbFun &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> local.o(i.gatLocalInit)
</UL>
<P><STRONG><a name="[235]"></a>gatAuthInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, authorization.o(i.gatAuthInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 2928<LI>Call Chain = gatAuthInit &rArr; gatReqAuthKey &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetCurMode
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
</UL>

<P><STRONG><a name="[239]"></a>gatAuthkeyGet</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, authorization.o(i.gatAuthkeyGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 2608<LI>Call Chain = gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofAuthKeyRead
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterTimer
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRecAuthKey
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
</UL>

<P><STRONG><a name="[32a]"></a>gatCheckSum</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, localcomm.o(i.gatCheckSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
</UL>

<P><STRONG><a name="[23b]"></a>gatCleanConfigData</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, gagent.o(i.gatCleanConfigData))
<BR><BR>[Stack]<UL><LI>Max Depth = 2728<LI>Call Chain = gatCleanConfigData &rArr; gatGServerStart &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetConnParaGet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheSSIDSet
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisable
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimeZoneSecSet
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCreatNewPassCode
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatFactoryMode
</UL>

<P><STRONG><a name="[242]"></a>gatCleanMqttCacheBuf</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, mqttgat.o(i.gatCleanMqttCacheBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatCleanMqttCacheBuf &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStop
</UL>

<P><STRONG><a name="[22b]"></a>gatCloudGizDataSend</STRONG> (Thumb, 126 bytes, Stack size 72 bytes, mqttgat.o(i.gatCloudGizDataSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = gatCloudGizDataSend &rArr; mqttSendPubData &rArr; mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatUpLoadDataCombine
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttSendPubData
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResCloudCtrl
</UL>

<P><STRONG><a name="[247]"></a>gatConfigFlagSet</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, productinfo.o(i.gatConfigFlagSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatConfigFlagSet &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataGet
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterRecCb
</UL>

<P><STRONG><a name="[23c]"></a>gatCreatNewPassCode</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, productinfo.o(i.gatCreatNewPassCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatCreatNewPassCode &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDevTime_MS
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
</UL>

<P><STRONG><a name="[21d]"></a>gatDataSend</STRONG> (Thumb, 520 bytes, Stack size 120 bytes, gagent.o(i.gatDataSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = gatDataSend &rArr; gatCloudGizDataSend &rArr; mqttSendPubData &rArr; mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLanSend
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLanLoginClientNumGet
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCloudGizDataSend
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSendCb
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
</UL>

<P><STRONG><a name="[f]"></a>gatDealUserPayload90</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, gagent.o(i.gatDealUserPayload90))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = gatDealUserPayload90 &rArr; gatDataRecCb &rArr; gagentDataReceived &rArr; gatDataSend &rArr; gatCloudGizDataSend &rArr; mqttSendPubData &rArr; mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_num_rem_len_bytes_safe
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isLoginClient
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataRecCb
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>gatDealUserPayload93</STRONG> (Thumb, 780 bytes, Stack size 96 bytes, gagent.o(i.gatDealUserPayload93))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = gatDealUserPayload93 &rArr; gatDataRecCb &rArr; gagentDataReceived &rArr; gatDataSend &rArr; gatCloudGizDataSend &rArr; mqttSendPubData &rArr; mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strToHex
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_num_rem_len_bytes_safe
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isLoginClient
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataRecCb
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[25a]"></a>gatDnsTask</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gdns.o(i.gatDnsTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = gatDnsTask &rArr; _adapteDnsReq &rArr; iofGatGetHostByName &rArr; iofGetHostByName &rArr; WIFI_GetHostAddress &rArr; ES_WIFI_DNS_LookUp &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDevTime_S
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adapteDnsReq
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>

<P><STRONG><a name="[267]"></a>gatDumpEnvInfo</STRONG> (Thumb, 274 bytes, Stack size 304 bytes, productinfo.o(i.gatDumpEnvInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = gatDumpEnvInfo &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvRead
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
</UL>

<P><STRONG><a name="[18]"></a>gatEnableBindStart</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, localcomm.o(i.gatEnableBindStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gatEnableBindStart &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgentEnableBind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>gatEnterTest</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, localcomm.o(i.gatEnterTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gatEnterTest &rArr; gatEnterTestMode &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnterTestMode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[269]"></a>gatEnterTestMode</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gatnet.o(i.gatEnterTestMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gatEnterTestMode &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetStartScan
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnterTest
</UL>

<P><STRONG><a name="[268]"></a>gatEnvRead</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, env.o(i.gatEnvRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gatEnvRead &rArr; iofFileRead
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileRead
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileOpen
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileClose
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDumpEnvInfo
</UL>

<P><STRONG><a name="[24c]"></a>gatEnvWrite</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, env.o(i.gatEnvWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 2240<LI>Call Chain = gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileWrite
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileOpen
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileClose
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
</UL>

<P><STRONG><a name="[26c]"></a>gatExitTest</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, gatnet.o(i.gatExitTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = gatExitTest &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetConnParaGet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheSSIDSet
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCachePwdSet
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheBSSIDSet
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalGAgentRestart
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResetCurMode
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTestModeTick
</UL>

<P><STRONG><a name="[16]"></a>gatFactoryMode</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, localcomm.o(i.gatFactoryMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 2752<LI>Call Chain = gatFactoryMode &rArr; gatCleanConfigData &rArr; gatGServerStart &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[270]"></a>gatGServerInit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gserver.o(i.gatGServerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gatGServerInit &rArr; gatNwkevtCbRegister &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkevtCbRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[23d]"></a>gatGServerStart</STRONG> (Thumb, 356 bytes, Stack size 104 bytes, gserver.o(i.gatGServerStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 2712<LI>Call Chain = gatGServerStart &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataGet
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexToStr
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStart
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReInit
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetM2MPort
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetM2MDomain
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostByName
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gserverDnsCb
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerHandleGatStatus
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
</UL>

<P><STRONG><a name="[1a]"></a>gatGetAuthReqAck</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, authorization.o(i.gatGetAuthReqAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gatGetAuthReqAck &rArr; gatTimerAdd &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResetCurMode
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[261]"></a>gatGetFileType</STRONG> (Thumb, 250 bytes, Stack size 144 bytes, otawan.o(i.gatGetFileType))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gatGetFileType &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[272]"></a>gatGetHostByName</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, gdns.o(i.gatGetHostByName))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gatGetHostByName &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dnsDataDump
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsRegister
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStart
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterTimer
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
</UL>

<P><STRONG><a name="[275]"></a>gatGetM2MDomain</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, gatm2m.o(i.gatGetM2MDomain))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gatGetM2MDomain
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
</UL>

<P><STRONG><a name="[277]"></a>gatGetM2MPort</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, gatm2m.o(i.gatGetM2MPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gatGetM2MPort
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
</UL>

<P><STRONG><a name="[260]"></a>gatGetMD5</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, otawan.o(i.gatGetMD5))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatGetMD5 &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[21f]"></a>gatGetMcuInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, localcomm.o(i.gatGetMcuInfo))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterTimer
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnableBindStart
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOTAEventHandle
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnableBindTimeOut
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
</UL>

<P><STRONG><a name="[20c]"></a>gatGetSoftVer</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gagent.o(i.gatGetSoftVer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatGetSoftVer &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOTAEventHandle
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetSoftVer
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
</UL>

<P><STRONG><a name="[27f]"></a>gatHttpInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, httpgat.o(i.gatHttpInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatHttpInit &rArr; iofLockInit &rArr; iofSemInit &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLockInit
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListHeadInit
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[266]"></a>gatHttpReq</STRONG> (Thumb, 460 bytes, Stack size 72 bytes, httpgat.o(i.gatHttpReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAddTail
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendNodeInit
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpPkgPack
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpPkgLenCalc
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelSendNode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisable
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownloadFirmware
</UL>

<P><STRONG><a name="[221]"></a>gatInit</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, gagent.o(i.gatInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 2992<LI>Call Chain = gatInit &rArr; gatLocalInit &rArr; gatAuthInit &rArr; gatReqAuthKey &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofStartAllThread
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofMsgCreat
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofTimerInit
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketInit
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpInit
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpInit
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerInit
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataInit
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerCoreInit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
</UL>

<P><STRONG><a name="[2b2]"></a>gatIofNetGetRssi</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, iofnet.o(i.gatIofNetGetRssi))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSignalCheckTick
</UL>

<P><STRONG><a name="[292]"></a>gatIofNetInit</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, iofnet.o(i.gatIofNetInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 2576<LI>Call Chain = gatIofNetInit &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusSet
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataGet
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSaveRebootReason
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
</UL>

<P><STRONG><a name="[294]"></a>gatIofSelect</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, iofsocket.o(i.gatIofSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatIofSelect &rArr; osSemaphoreWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReceiveHandle
</UL>

<P><STRONG><a name="[252]"></a>gatIofSocketClose</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, iofsocket.o(i.gatIofSocketClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_CloseClientConnection
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpListenAdd
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDelChNode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload90
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHTTPRecvTick
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MSocketConnect
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MCommand
</UL>

<P><STRONG><a name="[286]"></a>gatIofSocketConnect</STRONG> (Thumb, 254 bytes, Stack size 64 bytes, iofsocket.o(i.gatIofSocketConnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_OpenClientConnection
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ResetModule
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketOpen
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MSocketConnect
</UL>

<P><STRONG><a name="[28f]"></a>gatIofSocketInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, iofsocket.o(i.gatIofSocketInit))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[295]"></a>gatIofSocketOpen</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, iofsocket.o(i.gatIofSocketOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gatIofSocketOpen &rArr; osThreadCreate &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
</UL>

<P><STRONG><a name="[297]"></a>gatIofSocketTcpRecv</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, iofsocket.o(i.gatIofSocketTcpRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = gatIofSocketTcpRecv &rArr; WIFI_ReceiveData &rArr; ES_WIFI_ReceiveData &rArr; AT_RequestReceiveData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReceiveData
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecvDispatch
</UL>

<P><STRONG><a name="[298]"></a>gatIofTcpSend</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, iofsocket.o(i.gatIofTcpSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = gatIofTcpSend &rArr; WIFI_SendData &rArr; ES_WIFI_SendData &rArr; AT_RequestSendData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendResult
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendTask
</UL>

<P><STRONG><a name="[229]"></a>gatLanLoginClientNumGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lanvirtual.o(i.gatLanLoginClientNumGet))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gserverExcepTimeout
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onAppOnLineNumCb
</UL>

<P><STRONG><a name="[22c]"></a>gatLanSend</STRONG> (Thumb, 32 bytes, Stack size 40 bytes, lanvirtual.o(i.gatLanSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatLanSend &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
</UL>

<P><STRONG><a name="[29a]"></a>gatListAdd</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gatlist.o(i.gatListAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatListAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gatListAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerInsert
</UL>

<P><STRONG><a name="[285]"></a>gatListAddTail</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gatlist.o(i.gatListAddTail))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatListAddTail
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gatListAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendTask
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpListenAdd
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendListAdd
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[257]"></a>gatListDel</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gatlist.o(i.gatListDel))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gatListDel
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gatListDel
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendTask
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDelChNode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDelTcpDataNode
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendCBHandle
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerRemove
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelSendNode
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelRecNode
</UL>

<P><STRONG><a name="[2a1]"></a>gatListEmpty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gatlist.o(i.gatListEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTraversal
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendCBHandle
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
</UL>

<P><STRONG><a name="[281]"></a>gatListHeadInit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gatlist.o(i.gatListHeadInit))
<BR><BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendNodeInit
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDataNodeInit
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpChNodeInit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpInit
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpInit
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendNodeInit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecNodeInit
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttInit
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerCoreInit
</UL>

<P><STRONG><a name="[29d]"></a>gatLocalErrHandle</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, localcomm.o(i.gatLocalErrHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gatLocalErrHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoGet
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isAckCmd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
</UL>

<P><STRONG><a name="[a2]"></a>gatLocalErrHandleAckTimeOut</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, localcomm.o(i.gatLocalErrHandleAckTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatLocalErrHandleAckTimeOut &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> localcomm.o(i.gatLocalErrHandle)
</UL>
<P><STRONG><a name="[19]"></a>gatLocalGAgentRestart</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, localcomm.o(i.gatLocalGAgentRestart))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gatLocalGAgentRestart &rArr; gatTimerAdd &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[29f]"></a>gatLocalHandle</STRONG> (Thumb, 228 bytes, Stack size 120 bytes, localcomm.o(i.gatLocalHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = gatLocalHandle &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecvListGet
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dpTrans
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListEmpty
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>

<P><STRONG><a name="[28b]"></a>gatLocalInit</STRONG> (Thumb, 328 bytes, Stack size 56 bytes, local.o(i.gatLocalInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 2984<LI>Call Chain = gatLocalInit &rArr; gatAuthInit &rArr; gatReqAuthKey &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkevtCbRegister
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofThreadEnable
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofAuthKeyRead
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResetCurMode
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthInit
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthCbFun
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCreatNewPassCode
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[1c]"></a>gatLocalModuleCheck</STRONG> (Thumb, 350 bytes, Stack size 440 bytes, localcomm.o(i.gatLocalModuleCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = gatLocalModuleCheck &rArr; localWriteAck &rArr; localWrite &rArr; gatLocalSend &rArr; localTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetMACGet
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesInit
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Encrypt
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWriteAck
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strToHex
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetSoftVer
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoGet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[1af]"></a>gatLocalRecTimerOutHandle</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, localio.o(i.gatLocalRecTimerOutHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = gatLocalRecTimerOutHandle &rArr; iofLocalTimerMSStart &rArr; osTimerCreate &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialSend
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localTrigSend
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLocalTimerMSStart
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localSendListGet
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localSemIdGet
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localChanelListGet
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListEmpty
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocaltimerHandler
</UL>

<P><STRONG><a name="[2ac]"></a>gatLocalSend</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, localio.o(i.gatLocalSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gatLocalSend &rArr; localTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localTrigSend
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAddTail
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localSendListGet
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localSemIdGet
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWrite
</UL>

<P><STRONG><a name="[a6]"></a>gatLocalSignalCheckTick</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, localcomm.o(i.gatLocalSignalCheckTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = gatLocalSignalCheckTick &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusSet
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetGetSignalLevel
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofNetGetRssi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> localcomm.o(i.gatLocalSignalTickStart)
</UL>
<P><STRONG><a name="[2ae]"></a>gatLocalSignalTickClose</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, localcomm.o(i.gatLocalSignalTickClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatLocalSignalTickClose &rArr; gatTimerDel &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusSet
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSendStatus
</UL>

<P><STRONG><a name="[2ad]"></a>gatLocalSignalTickStart</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, localcomm.o(i.gatLocalSignalTickStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gatLocalSignalTickStart &rArr; gatTimerAdd &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSendStatus
</UL>

<P><STRONG><a name="[2a3]"></a>gatLocalioInit</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, localio.o(i.gatLocalioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 2592<LI>Call Chain = gatLocalioInit &rArr; gatReBoot &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialOpen
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialInit
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSemInit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLockInit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAddTail
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReBoot
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListHeadInit
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
</UL>

<P><STRONG><a name="[15]"></a>gatM2MCommand</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, gatm2m.o(i.gatM2MCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 2600<LI>Call Chain = gatM2MCommand &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devRestart
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[2b9]"></a>gatM2MHeartBeatStart</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, mqttgat.o(i.gatM2MHeartBeatStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gatM2MHeartBeatStart &rArr; gatTimerAdd &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MSubTopicCb
</UL>

<P><STRONG><a name="[2ba]"></a>gatM2MHeartBeatStop</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mqttgat.o(i.gatM2MHeartBeatStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatM2MHeartBeatStop &rArr; gatTimerDel &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStop
</UL>

<P><STRONG><a name="[28c]"></a>gatM2MInit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gatm2m.o(i.gatM2MInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gatM2MInit &rArr; gatMqttInit &rArr; iofLockInit &rArr; iofSemInit &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkevtCbRegister
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttInit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoSet
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[278]"></a>gatM2MReInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gatm2m.o(i.gatM2MReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = gatM2MReInit &rArr; gatTcpClrChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttReInit
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
</UL>

<P><STRONG><a name="[2b8]"></a>gatM2MReStartServer</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gatm2m.o(i.gatM2MReStartServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = gatM2MReStartServer &rArr; gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MSubTopicCb
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MLoginCb
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktConnCb
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServerTimeOut
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHandleGatStatus
</UL>

<P><STRONG><a name="[279]"></a>gatM2MServerStart</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, gatm2m.o(i.gatM2MServerStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = gatM2MServerStart &rArr; gatM2MSocketConnect &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostByName
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MSocketConnect
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatm2mDnsCb
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServerTimeOut
</UL>

<P><STRONG><a name="[2b7]"></a>gatM2MServerStop</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gatm2m.o(i.gatM2MServerStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = gatM2MServerStop &rArr; gatTcpClrChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHeartBeatStop
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanMqttCacheBuf
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHandleGatStatus
</UL>

<P><STRONG><a name="[2be]"></a>gatM2MSocketConnect</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gatm2m.o(i.gatM2MSocketConnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = gatM2MSocketConnect &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoSet
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStart
</UL>

<P><STRONG><a name="[2bf]"></a>gatM2MStopReStartServer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gatm2m.o(i.gatM2MStopReStartServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatM2MStopReStartServer &rArr; gatTimerDel &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MSubTopicCb
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MLoginCb
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktConnCb
</UL>

<P><STRONG><a name="[233]"></a>gatMainLoop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gagent.o(i.gatMainLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 2712<LI>Call Chain = gatMainLoop &rArr; gatTaskHandle &rArr; gatNetInit &rArr; gatIofNetInit &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[2bc]"></a>gatMqttInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mqttgat.o(i.gatMqttInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatMqttInit &rArr; iofLockInit &rArr; iofSemInit &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLockInit
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListHeadInit
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MInit
</UL>

<P><STRONG><a name="[2bd]"></a>gatMqttReInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, mqttgat.o(i.gatMqttReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatMqttReInit &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReInit
</UL>

<P><STRONG><a name="[1f3]"></a>gatMsgId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gagent.o(i.gatMsgId))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendResult
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostByName
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDelChNode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecResult
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthCbFun
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendResult
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHTTPRecvTick
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsTick
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onOTA41EventNoticCb
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerTriggerNotifyLp
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nwkEventNotify
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendCb
</UL>

<P><STRONG><a name="[211]"></a>gatNetBackupBSSIDGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, iofnet.o(i.gatNetBackupBSSIDGet))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
</UL>

<P><STRONG><a name="[2c1]"></a>gatNetBackupBSSIDSet</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, iofnet.o(i.gatNetBackupBSSIDSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatNetBackupBSSIDSet
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetConnParaGet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
</UL>

<P><STRONG><a name="[212]"></a>gatNetBackupPwdGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, iofnet.o(i.gatNetBackupPwdGet))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
</UL>

<P><STRONG><a name="[2c2]"></a>gatNetBackupPwdSet</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, iofnet.o(i.gatNetBackupPwdSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatNetBackupPwdSet
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetConnParaGet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
</UL>

<P><STRONG><a name="[213]"></a>gatNetBackupSSIDGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, iofnet.o(i.gatNetBackupSSIDGet))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
</UL>

<P><STRONG><a name="[2c3]"></a>gatNetBackupSSIDSet</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, iofnet.o(i.gatNetBackupSSIDSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatNetBackupSSIDSet
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetConnParaGet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
</UL>

<P><STRONG><a name="[20e]"></a>gatNetCacheBSSIDGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, iofnet.o(i.gatNetCacheBSSIDGet))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
</UL>

<P><STRONG><a name="[26f]"></a>gatNetCacheBSSIDSet</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, iofnet.o(i.gatNetCacheBSSIDSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatNetCacheBSSIDSet
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetConnParaGet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
</UL>

<P><STRONG><a name="[20f]"></a>gatNetCachePwdGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, iofnet.o(i.gatNetCachePwdGet))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
</UL>

<P><STRONG><a name="[26e]"></a>gatNetCachePwdSet</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, iofnet.o(i.gatNetCachePwdSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatNetCachePwdSet
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetConnParaGet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
</UL>

<P><STRONG><a name="[210]"></a>gatNetCacheSSIDGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, iofnet.o(i.gatNetCacheSSIDGet))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
</UL>

<P><STRONG><a name="[241]"></a>gatNetCacheSSIDSet</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, iofnet.o(i.gatNetCacheSSIDSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatNetCacheSSIDSet
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetConnParaGet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
</UL>

<P><STRONG><a name="[240]"></a>gatNetConnParaGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gatnet.o(i.gatNetConnParaGet))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheSSIDSet
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCachePwdSet
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheBSSIDSet
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupSSIDSet
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupPwdSet
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupBSSIDSet
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
</UL>

<P><STRONG><a name="[ae]"></a>gatNetEventHandle</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gatnet.o(i.gatNetEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 2624<LI>Call Chain = gatNetEventHandle &rArr; gatRouterUpdateInfo &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatnet.o(i.gatNetInit)
</UL>
<P><STRONG><a name="[2b3]"></a>gatNetGetSignalLevel</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, iofnet.o(i.gatNetGetSignalLevel))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSignalCheckTick
</UL>

<P><STRONG><a name="[2c5]"></a>gatNetInit</STRONG> (Thumb, 342 bytes, Stack size 112 bytes, gatnet.o(i.gatNetInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 2688<LI>Call Chain = gatNetInit &rArr; gatIofNetInit &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkevtCbRegister
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetStationStart
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetSoftApStart
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetMACGet
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheSSIDGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCachePwdGet
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheBSSIDGet
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupSSIDGet
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupPwdGet
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupBSSIDGet
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofNetInit
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoGet
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>

<P><STRONG><a name="[2a4]"></a>gatNetMACGet</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, iofnet.o(i.gatNetMACGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gatNetMACGet &rArr; WIFI_GetMAC_Address &rArr; ES_WIFI_GetMACAddress &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetMAC_Address
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRecAuthKey
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
</UL>

<P><STRONG><a name="[2c7]"></a>gatNetSoftApStart</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, iofnet.o(i.gatNetSoftApStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = gatNetSoftApStart &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
</UL>

<P><STRONG><a name="[26a]"></a>gatNetStartScan</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, iofnet.o(i.gatNetStartScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gatNetStartScan &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofWifiScan
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTestModeTick
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnterTestMode
</UL>

<P><STRONG><a name="[2c6]"></a>gatNetStationStart</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, iofnet.o(i.gatNetStationStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = gatNetStationStart &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTestModeTick
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
</UL>

<P><STRONG><a name="[23e]"></a>gatNormalDeviceDisable</STRONG> (Thumb, 176 bytes, Stack size 64 bytes, gserver.o(i.gatNormalDeviceDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = gatNormalDeviceDisable &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
</UL>

<P><STRONG><a name="[2c9]"></a>gatNwkEventHandle</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, nwk_manage.o(i.gatNwkEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatNwkEventHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>

<P><STRONG><a name="[28a]"></a>gatNwkInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, nwk_manage.o(i.gatNwkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatNwkInit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[271]"></a>gatNwkevtCbRegister</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, nwk_manage.o(i.gatNwkevtCbRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatNwkevtCbRegister &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userInit
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerInit
</UL>

<P><STRONG><a name="[2ca]"></a>gatOTAEventHandle</STRONG> (Thumb, 232 bytes, Stack size 64 bytes, otawan.o(i.gatOTAEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = gatOTAEventHandle &rArr; gatReqLastVersion &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetSoftVer
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWanOtaStatusGet
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>

<P><STRONG><a name="[225]"></a>gatProductConfiInfoSave</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, productinfo.o(i.gatProductConfiInfoSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 2560<LI>Call Chain = gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDumpEnvInfo
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSaveRebootReason
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterRecCb
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterParse
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisableParse
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoSetGServerIp
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MCommand
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentRebootTimer
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthKeySet
</UL>

<P><STRONG><a name="[20b]"></a>gatProductDefaultInfoGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, productinfo.o(i.gatProductDefaultInfoGet))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalErrHandle
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDoHeartBeat
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttConnBrokerInit
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
</UL>

<P><STRONG><a name="[2cd]"></a>gatProductDefaultInfoInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, productinfo.o(i.gatProductDefaultInfoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatProductDefaultInfoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
</UL>

<P><STRONG><a name="[222]"></a>gatProductDefaultInfoSet</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, productinfo.o(i.gatProductDefaultInfoSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gatProductDefaultInfoSet &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
</UL>

<P><STRONG><a name="[21b]"></a>gatProductInfoGet</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, productinfo.o(i.gatProductInfoGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatProductInfoGet &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gserverDnsCb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterTimer
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterParse
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisableParse
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOTAEventHandle
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisable
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoSetGServerIp
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MLoginCb
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktConnCb
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKey
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthKeySet
</UL>

<P><STRONG><a name="[288]"></a>gatProductInfoInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, productinfo.o(i.gatProductInfoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 2856<LI>Call Chain = gatProductInfoInit &rArr; gatProductInfoUpdateFromEnv &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetMACGet
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLockInit
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoInit
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDumpEnvInfo
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dumpPruductInfo
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[2ce]"></a>gatProductInfoSetGServerIp</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, productinfo.o(i.gatProductInfoSetGServerIp))
<BR><BR>[Stack]<UL><LI>Max Depth = 2576<LI>Call Chain = gatProductInfoSetGServerIp &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gserverDnsCb
</UL>

<P><STRONG><a name="[223]"></a>gatProductInfoUpdateFromEnv</STRONG> (Thumb, 402 bytes, Stack size 296 bytes, productinfo.o(i.gatProductInfoUpdateFromEnv))
<BR><BR>[Stack]<UL><LI>Max Depth = 2848<LI>Call Chain = gatProductInfoUpdateFromEnv &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataGet
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvRead
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCreatNewPassCode
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoExtracFromEnv
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
</UL>

<P><STRONG><a name="[276]"></a>gatProvision</STRONG> (Thumb, 266 bytes, Stack size 184 bytes, gserver.o(i.gatProvision))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesInit
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Encrypt
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strToHex
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterRecCb
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionTimer
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServer
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MCommand
</UL>

<P><STRONG><a name="[264]"></a>gatReBoot</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gagent.o(i.gatReBoot))
<BR><BR>[Stack]<UL><LI>Max Depth = 2576<LI>Call Chain = gatReBoot &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSaveRebootReason
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devRestart
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gserverExcepTimeout
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetExcepTimeout
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[1b]"></a>gatRecAuthKey</STRONG> (Thumb, 476 bytes, Stack size 72 bytes, authorization.o(i.gatRecAuthKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 2680<LI>Call Chain = gatRecAuthKey &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetMACGet
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResetCurMode
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWriteAck
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthKeySet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[274]"></a>gatRegsiter</STRONG> (Thumb, 834 bytes, Stack size 568 bytes, gserver.o(i.gatRegsiter))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = gatRegsiter &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataGet
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetConnParaGet
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexToStr
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesInit
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Encrypt
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDestroy
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Update
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Final
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryptDisplay
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterTimer
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
</UL>

<P><STRONG><a name="[11]"></a>gatResCloudCtrl</STRONG> (Thumb, 130 bytes, Stack size 104 bytes, gatm2m.o(i.gatResCloudCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = gatResCloudCtrl &rArr; gatCloudGizDataSend &rArr; mqttSendPubData &rArr; mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCloudGizDataSend
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryptDisplay
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[26d]"></a>gatResetCurMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dp.o(i.gatResetCurMode))
<BR><BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRecAuthKey
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetAuthReqAck
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWaitAuthKeyTimer
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqAuthKeyTimeOut
</UL>

<P><STRONG><a name="[af]"></a>gatRouterConnTimeout</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, gatnet.o(i.gatRouterConnTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 2608<LI>Call Chain = gatRouterConnTimeout &rArr; gatReBoot &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetStationStart
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheSSIDGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCachePwdGet
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheBSSIDGet
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupSSIDGet
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupPwdGet
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupBSSIDGet
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSaveRebootReason
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReBoot
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatnet.o(i.gatNetInit)
</UL>
<P><STRONG><a name="[248]"></a>gatRunTimeDataGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gagent.o(i.gatRunTimeDataGet))
<BR><BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofNetInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterRecCb
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimeZoneSecSet
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigFlagSet
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoExtracFromEnv
</UL>

<P><STRONG><a name="[289]"></a>gatRunTimeDataInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gagent.o(i.gatRunTimeDataInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatRunTimeDataInit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[203]"></a>gatSaveRebootReason</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, productinfo.o(i.gatSaveRebootReason))
<BR><BR>[Stack]<UL><LI>Max Depth = 2568<LI>Call Chain = gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofNetInit
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devOtaUpgrade
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterConnTimeout
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReBoot
</UL>

<P><STRONG><a name="[1ce]"></a>gatSerialRecHandle</STRONG> (Thumb, 142 bytes, Stack size 1048 bytes, localio.o(i.gatSerialRecHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = gatSerialRecHandle &rArr; iofSerialRead &rArr; serial_read
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialSelect
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialRead
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecCbFunGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialRecThread
</UL>

<P><STRONG><a name="[1cf]"></a>gatSerialSendHandle</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, localio.o(i.gatSerialSendHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = gatSerialSendHandle &rArr; iofLocalTimerMSStart &rArr; osTimerCreate &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialSend
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semP
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localTrigSend
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLocalTimerMSStart
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localSendListGet
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localSemIdGet
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localChanelListGet
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListEmpty
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialSendThread
</UL>

<P><STRONG><a name="[236]"></a>gatSetCurMode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, dp.o(i.gatSetCurMode))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthInit
</UL>

<P><STRONG><a name="[2d0]"></a>gatSetM2MDomain</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gatm2m.o(i.gatSetM2MDomain))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatSetM2MDomain &rArr; m2mInfoSet &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoSet
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
</UL>

<P><STRONG><a name="[2d1]"></a>gatSetM2MPort</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gatm2m.o(i.gatSetM2MPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatSetM2MPort &rArr; m2mInfoSet &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoSet
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
</UL>

<P><STRONG><a name="[ed]"></a>gatSetNwkEvent</STRONG> (Thumb, 1972 bytes, Stack size 16 bytes, nwk_manage.o(i.gatSetNwkEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusSet
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusGet
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nwkSetHalStatus
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nwkResetHalStatus
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nwkEventNotify
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetStationStart
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetSoftApStart
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDetectThread
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTestModeTick
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnterTestMode
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnableBindStart
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDoHeartBeat
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MSubTopicCb
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onAppOnLineNumCb
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktRecCb
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MCommand
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSignalCheckTick
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnableBindTimeOut
</UL>

<P><STRONG><a name="[220]"></a>gatSetSoftVer</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gagent.o(i.gatSetSoftVer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatSetSoftVer &rArr; gatGetSoftVer &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetSoftVer
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
</UL>

<P><STRONG><a name="[227]"></a>gatStatusGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gagent.o(i.gatStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gserverDnsCb
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalStatusSync
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkEventHandle
</UL>

<P><STRONG><a name="[293]"></a>gatStatusSet</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gagent.o(i.gatStatusSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatStatusSet &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofNetInit
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSignalTickClose
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSignalCheckTick
</UL>

<P><STRONG><a name="[2c0]"></a>gatTaskHandle</STRONG> (Thumb, 282 bytes, Stack size 16 bytes, gagent.o(i.gatTaskHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 2704<LI>Call Chain = gatTaskHandle &rArr; gatNetInit &rArr; gatIofNetInit &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendCBHandle
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpRecHandle
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sktConnHandle
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSigHandle
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOTAEventHandle
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDnsTask
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerHandle
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkEventHandle
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMainLoop
</UL>

<P><STRONG><a name="[27e]"></a>gatTcpClrChNode</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, tcp.o(i.gatTcpClrChNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = gatTcpClrChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReInit
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHTTPRecvTick
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStop
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MCommand
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendCb
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[1d5]"></a>gatTcpDataSendHandle</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tcp.o(i.gatTcpDataSendHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = gatTcpDataSendHandle &rArr; gatTcpSendTask &rArr; gatIofTcpSend &rArr; WIFI_SendData &rArr; ES_WIFI_SendData &rArr; AT_RequestSendData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semP
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendTask
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TcpDataSendThread
</UL>

<P><STRONG><a name="[2e4]"></a>gatTcpDelChNode</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, tcp.o(i.gatTcpDelChNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = gatTcpDelChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecvDispatch
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktRecCb
</UL>

<P><STRONG><a name="[290]"></a>gatTcpInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, tcp.o(i.gatTcpInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatTcpInit &rArr; iofLockInit &rArr; iofSemInit &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSemInit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLockInit
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListHeadInit
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[2e5]"></a>gatTcpListenAdd</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, tcp.o(i.gatTcpListenAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = gatTcpListenAdd &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpChNodeInit
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAddTail
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktConnCb
</UL>

<P><STRONG><a name="[2e6]"></a>gatTcpReadRecData</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, tcp.o(i.gatTcpReadRecData))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatTcpReadRecData &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpRecHandle
</UL>

<P><STRONG><a name="[1d4]"></a>gatTcpReceiveHandle</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, tcp.o(i.gatTcpReceiveHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = gatTcpReceiveHandle &rArr; gatTcpRecvDispatch &rArr; gatTcpRecv &rArr; gatTcpDelChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSelect
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecvDispatch
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TcpDataRecThread
</UL>

<P><STRONG><a name="[2e9]"></a>gatTcpRecv</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, tcp.o(i.gatTcpRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = gatTcpRecv &rArr; gatTcpDelChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofThreadDelay
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDelChNode
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecResult
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDataNodeInit
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAddTail
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecvDispatch
</UL>

<P><STRONG><a name="[2e8]"></a>gatTcpRecvDispatch</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, tcp.o(i.gatTcpRecvDispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = gatTcpRecvDispatch &rArr; gatTcpRecv &rArr; gatTcpDelChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketTcpRecv
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDelChNode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReceiveHandle
</UL>

<P><STRONG><a name="[2eb]"></a>gatTcpSend</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, tcp.o(i.gatTcpSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gatTcpSend &rArr; tcpSendListAdd &rArr; tcpTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendListAdd
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendNodeInit
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSend
</UL>

<P><STRONG><a name="[299]"></a>gatTcpSendResult</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, iofsocket.o(i.gatTcpSendResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = gatTcpSendResult &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofTcpSend
</UL>

<P><STRONG><a name="[2e3]"></a>gatTcpSendTask</STRONG> (Thumb, 386 bytes, Stack size 48 bytes, tcp.o(i.gatTcpSendTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = gatTcpSendTask &rArr; gatIofTcpSend &rArr; WIFI_SendData &rArr; ES_WIFI_SendData &rArr; AT_RequestSendData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofTcpSend
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAddTail
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDataSendHandle
</UL>

<P><STRONG><a name="[9a]"></a>gatTestModeTick</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gatnet.o(i.gatTestModeTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gatTestModeTick &rArr; gatNetStationStart &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWiFiScanResult
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetStationStart
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetStartScan
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatnet.o(i.gatEnterTestMode)
</UL>
<P><STRONG><a name="[23f]"></a>gatTimeZoneSecSet</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, productinfo.o(i.gatTimeZoneSecSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatTimeZoneSecSet &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataGet
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanConfigData
</UL>

<P><STRONG><a name="[224]"></a>gatTimerAdd</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, timer_subsystem.o(i.gatTimerAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gatTimerAdd &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerUpdataExpire
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerRemove
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerNodeInit
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerInsert
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterRecCb
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerHandleGatStatus
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalGAgentRestart
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetEventHandle
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnterTestMode
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSignalTickStart
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatFactoryMode
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnableBindStart
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetInit
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDnsTask
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHeartBeatStart
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktConnCb
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServer
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerHandle
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetAuthReqAck
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[28d]"></a>gatTimerCoreInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, timer_subsystem.o(i.gatTimerCoreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatTimerCoreInit &rArr; iofLockInit &rArr; iofSemInit &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLockInit
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListHeadInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[22a]"></a>gatTimerDel</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, timer_subsystem.o(i.gatTimerDel))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gatTimerDel &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerRemove
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterRecCb
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerHandleGatStatus
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulatorUploadDtatCb
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatExitTest
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRouterUpdateInfo
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSignalTickClose
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHTTPRecvTick
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHeartBeatStop
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MStopReStartServer
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRecAuthKey
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendCb
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[2e0]"></a>gatTimerHandle</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, timer_subsystem.o(i.gatTimerHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gatTimerHandle &rArr; gatTimerAdd &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>

<P><STRONG><a name="[2f3]"></a>gatTimerTick</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, timer_subsystem.o(i.gatTimerTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = gatTimerTick &rArr; timerTriggerNotifyLp &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerUpdataExpire
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerTriggerNotifyLp
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerCb
</UL>

<P><STRONG><a name="[2f5]"></a>gatTimerTraversal</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, timer_subsystem.o(i.gatTimerTraversal))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatTimerTraversal &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListEmpty
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerCb
</UL>

<P><STRONG><a name="[245]"></a>gatUpLoadDataCombine</STRONG> (Thumb, 374 bytes, Stack size 72 bytes, gatutilcode.o(i.gatUpLoadDataCombine))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatUpLoadDataCombine &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htonl
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_len_of_bytes
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCloudGizDataSend
</UL>

<P><STRONG><a name="[c0]"></a>gatUserProcess</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gagent_iot_test_basic_connectivity.o(i.gatUserProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatUserProcess &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gagent_iot_test_basic_connectivity.o(i.userInit)
</UL>
<P><STRONG><a name="[25b]"></a>gatWanOtaParmGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, otawan.o(i.gatWanOtaParmGet))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReDownloadTimerCb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[2cb]"></a>gatWanOtaStatusGet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, otawan.o(i.gatWanOtaStatusGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatWanOtaStatusGet &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOTAEventHandle
</UL>

<P><STRONG><a name="[2ee]"></a>gatWiFiScanResult</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, iofnet.o(i.gatWiFiScanResult))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTestModeTick
</UL>

<P><STRONG><a name="[2f9]"></a>getCurMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dp.o(i.getCurMode))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDpEntry
</UL>

<P><STRONG><a name="[24d]"></a>getDevTime_MS</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ioftime.o(i.getDevTime_MS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getDevTime_MS
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCreatNewPassCode
</UL>

<P><STRONG><a name="[209]"></a>getDpEntry</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, dp.o(i.getDpEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = getDpEntry &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isInCurMode
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurMode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dpTrans
</UL>

<P><STRONG><a name="[24b]"></a>getEnvErase</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, env.o(i.getEnvErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = getEnvErase &rArr; iofFileErase &rArr; FLASH_unlock_erase &rArr; HAL_FLASHEx_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileOpen
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileErase
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileClose
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
</UL>

<P><STRONG><a name="[1a3]"></a>getKeyValue</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gatutilcode.o(i.getKeyValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = getKeyValue &rArr; getKeyValueCustom &rArr; findKey &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKeyValueCustom
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterParse
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_getdomain_port
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoExtracFromEnv
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOtaSoftVerify
</UL>

<P><STRONG><a name="[2fd]"></a>getKeyValueCustom</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gatutilcode.o(i.getKeyValueCustom))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = getKeyValueCustom &rArr; findKey &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findValue
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findKey
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKeyValue
</UL>

<P><STRONG><a name="[2fc]"></a>getc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, getc.o(i.getc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = getc &rArr; fgetc &rArr; HAL_UART_Receive &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateWiFiCredentials
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getInputString
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_credential
</UL>

<P><STRONG><a name="[21c]"></a>gizIssuedProcess</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, gagent_iot_test_basic_connectivity.o(i.gizIssuedProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gizIssuedProcess &rArr; osThreadResume &rArr; xTaskResumeFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadResume
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadIsSuspended
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
</UL>

<P><STRONG><a name="[2b1]"></a>gizWiFiStatus</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gagent_iot_test_basic_connectivity.o(i.gizWiFiStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gizWiFiStatus &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalStatusSync
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSendStatus
</UL>

<P><STRONG><a name="[1ba]"></a>gmult</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, aes.o(i.gmult))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gmult
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coef_mult
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rcon
</UL>

<P><STRONG><a name="[273]"></a>hexToStr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gatutilcode.o(i.hexToStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hexToStr &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterTimer
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
</UL>

<P><STRONG><a name="[2f6]"></a>htonl</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, iofdev.o(i.htonl))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = htonl &rArr; checkCPUendian
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCPUendian
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatUpLoadDataCombine
</UL>

<P><STRONG><a name="[2b0]"></a>htons</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, iofdev.o(i.htons))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = htons &rArr; checkCPUendian
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCPUendian
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalStatusSync
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSendStatus
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatUpLoadDataCombine
</UL>

<P><STRONG><a name="[a1]"></a>httpConnCb</STRONG> (Thumb, 318 bytes, Stack size 72 bytes, httpgat.o(i.httpConnCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = httpConnCb &rArr; gatTcpListenAdd &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpListenAdd
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelSendNode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpgat.o(i.gatHttpReq)
</UL>
<P><STRONG><a name="[305]"></a>httpDelRecNode</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, httpgat.o(i.httpDelRecNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = httpDelRecNode &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSigHandle
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[27d]"></a>httpDelSendNode</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, httpgat.o(i.httpDelSendNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = httpDelSendNode &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHTTPRecvTick
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendCb
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[258]"></a>httpParseRescode</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, httpgat.o(i.httpParseRescode))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = httpParseRescode &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterRecCb
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDeviceDisableRecCb
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
</UL>

<P><STRONG><a name="[b9]"></a>httpRecCb</STRONG> (Thumb, 866 bytes, Stack size 72 bytes, httpgat.o(i.httpRecCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = httpRecCb &rArr; gatTcpClrChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAddTail
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendResult
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecNodeInit
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpHeader
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpBody
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelSendNode
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelRecNode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpgat.o(i.httpConnCb)
</UL>
<P><STRONG><a name="[bb]"></a>httpSendCb</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, httpgat.o(i.httpSendCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = httpSendCb &rArr; gatTcpClrChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelSendNode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpgat.o(i.httpConnCb)
</UL>
<P><STRONG><a name="[2dd]"></a>httpSigHandle</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, httpgat.o(i.httpSigHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = httpSigHandle &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelRecNode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>

<P><STRONG><a name="[30a]"></a>init_sensors</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, sensors_data.o(i.init_sensors))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = init_sensors &rArr; osThreadCreate &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TSENSOR_Init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_HSENSOR_Init
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30d]"></a>invSboxAssign</STRONG> (Thumb, 2062 bytes, Stack size 8 bytes, aesdata.o(i.invSboxAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = invSboxAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSboxInit
</UL>

<P><STRONG><a name="[1fc]"></a>invSboxInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, aes.o(i.invSboxInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = invSboxInit &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSboxAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesInit
</UL>

<P><STRONG><a name="[1f8]"></a>inv_cipher</STRONG> (Thumb, 172 bytes, Stack size 44 bytes, aes.o(i.inv_cipher))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = inv_cipher &rArr; inv_mix_columns &rArr; coef_mult &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_sub_bytes
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_shift_rows
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_mix_columns
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_round_key
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Decrypt
</UL>

<P><STRONG><a name="[310]"></a>inv_mix_columns</STRONG> (Thumb, 82 bytes, Stack size 28 bytes, aes.o(i.inv_mix_columns))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = inv_mix_columns &rArr; coef_mult &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coef_mult
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cipher
</UL>

<P><STRONG><a name="[30e]"></a>inv_shift_rows</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, aes.o(i.inv_shift_rows))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inv_shift_rows
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cipher
</UL>

<P><STRONG><a name="[30f]"></a>inv_sub_bytes</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, aes.o(i.inv_sub_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = inv_sub_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_cipher
</UL>

<P><STRONG><a name="[23a]"></a>iofAuthKeyRead</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, authorization.o(i.iofAuthKeyRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = iofAuthKeyRead &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
</UL>

<P><STRONG><a name="[323]"></a>iofCurTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ioftime.o(i.iofCurTime))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofTimerInit
</UL>

<P><STRONG><a name="[25d]"></a>iofFileClose</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ioffile.o(i.iofFileClose))
<BR><BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEnvErase
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvWrite
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvRead
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[2fa]"></a>iofFileErase</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, ioffile.o(i.iofFileErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = iofFileErase &rArr; FLASH_unlock_erase &rArr; HAL_FLASHEx_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_unlock_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileWrite
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEnvErase
</UL>

<P><STRONG><a name="[262]"></a>iofFileOpen</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ioffile.o(i.iofFileOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = iofFileOpen &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEnvErase
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvWrite
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvRead
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[26b]"></a>iofFileRead</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ioffile.o(i.iofFileRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = iofFileRead
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvRead
</UL>

<P><STRONG><a name="[263]"></a>iofFileWrite</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, ioffile.o(i.iofFileWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 2200<LI>Call Chain = iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_update
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileErase
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvWrite
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[1eb]"></a>iofGatGetHostByName</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, iofnet.o(i.iofGatGetHostByName))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = iofGatGetHostByName &rArr; iofGetHostByName &rArr; WIFI_GetHostAddress &rArr; ES_WIFI_DNS_LookUp &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofGetHostByName
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adapteDnsReq
</UL>

<P><STRONG><a name="[311]"></a>iofGetHostByName</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, iofnet.o(i.iofGetHostByName))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = iofGetHostByName &rArr; WIFI_GetHostAddress &rArr; ES_WIFI_DNS_LookUp &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetHostAddress
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofGatGetHostByName
</UL>

<P><STRONG><a name="[2a8]"></a>iofLocalTimerMSStart</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ioftime.o(i.iofLocalTimerMSStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = iofLocalTimerMSStart &rArr; osTimerCreate &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerCreate
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
</UL>

<P><STRONG><a name="[314]"></a>iofLocalTimerMSStop</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ioftime.o(i.iofLocalTimerMSStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = iofLocalTimerMSStop &rArr; osTimerDelete &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
</UL>

<P><STRONG><a name="[243]"></a>iofLock</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, iofipc.o(i.iofLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = iofLock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semOp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReceiveHandle
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTraversal
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTick
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReadRecData
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpListenAdd
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendListAdd
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDelTcpDataNode
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localChannelNodeGet
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendCBHandle
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSigHandle
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHTTPRecvTick
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttReInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanMqttCacheBuf
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendCb
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[280]"></a>iofLockInit</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, iofipc.o(i.iofLockInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = iofLockInit &rArr; iofSemInit &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpInit
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpInit
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttInit
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerCoreInit
</UL>

<P><STRONG><a name="[287]"></a>iofMsgCreat</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, iofipc.o(i.iofMsgCreat))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = iofMsgCreat &rArr; osSemaphoreCreate &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolCreate
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[232]"></a>iofRecSig</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, iofipc.o(i.iofRecSig))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = iofRecSig &rArr; osMessageGet &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolFree
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageGet
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[2b4]"></a>iofSemInit</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, iofipc.o(i.iofSemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = iofSemInit &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLockInit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpInit
</UL>

<P><STRONG><a name="[1f4]"></a>iofSendSig</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, iofipc.o(i.iofSendSig))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolAlloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessagePut
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendResult
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostByName
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDelChNode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecResult
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthCbFun
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendResult
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHTTPRecvTick
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsTick
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onOTA41EventNoticCb
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerTriggerNotifyLp
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nwkEventNotify
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendCb
</UL>

<P><STRONG><a name="[2b5]"></a>iofSerialInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, iofserial.o(i.iofSerialInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = iofSerialInit &rArr; osSemaphoreCreate &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
</UL>

<P><STRONG><a name="[2b6]"></a>iofSerialOpen</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, iofserial.o(i.iofSerialOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = iofSerialOpen &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
</UL>

<P><STRONG><a name="[2d6]"></a>iofSerialRead</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, iofserial.o(i.iofSerialRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = iofSerialRead &rArr; serial_read
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialRecHandle
</UL>

<P><STRONG><a name="[2d5]"></a>iofSerialSelect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, iofserial.o(i.iofSerialSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iofSerialSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialRecHandle
</UL>

<P><STRONG><a name="[2a7]"></a>iofSerialSend</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, iofserial.o(i.iofSerialSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = iofSerialSend &rArr; serial_write &rArr; osSemaphoreWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_write
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
</UL>

<P><STRONG><a name="[291]"></a>iofStartAllThread</STRONG> (Thumb, 104 bytes, Stack size 64 bytes, iofpthread.o(i.iofStartAllThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = iofStartAllThread &rArr; osThreadCreate &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[2ea]"></a>iofThreadDelay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ioftime.o(i.iofThreadDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = iofThreadDelay &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
</UL>

<P><STRONG><a name="[2a2]"></a>iofThreadEnable</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, iofpthread.o(i.iofThreadEnable))
<BR><BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalInit
</UL>

<P><STRONG><a name="[28e]"></a>iofTimerInit</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, ioftime.o(i.iofTimerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = iofTimerInit &rArr; osThreadCreate &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofCurTime
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatInit
</UL>

<P><STRONG><a name="[384]"></a>iofToupper</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gatutilcode.o(i.iofToupper))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strToHex
</UL>

<P><STRONG><a name="[244]"></a>iofUnlock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, iofipc.o(i.iofUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semOp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReceiveHandle
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTraversal
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTick
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReadRecData
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpListenAdd
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendListAdd
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDelTcpDataNode
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localChannelNodeGet
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendCBHandle
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSigHandle
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoInit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpConnCb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHTTPRecvTick
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttReInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanMqttCacheBuf
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendCb
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[2c8]"></a>iofWifiScan</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, iofnet.o(i.iofWifiScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = iofWifiScan &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetStartScan
</UL>

<P><STRONG><a name="[29e]"></a>isAckCmd</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, localcomm.o(i.isAckCmd))
<BR><BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isNeed2AckdCmd
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalErrHandle
</UL>

<P><STRONG><a name="[2f8]"></a>isInCurMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dp.o(i.isInCurMode))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDpEntry
</UL>

<P><STRONG><a name="[251]"></a>isLoginClient</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lanvirtual.o(i.isLoginClient))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload90
</UL>

<P><STRONG><a name="[324]"></a>isNeed2AckdCmd</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, localcomm.o(i.isNeed2AckdCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = isNeed2AckdCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isAckCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
</UL>

<P><STRONG><a name="[1f7]"></a>key_expansion</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, aes.o(i.key_expansion))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = key_expansion &rArr; Rcon &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sub_word
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rot_word
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coef_add
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rcon
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Encrypt
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Decrypt
</UL>

<P><STRONG><a name="[2a6]"></a>localChanelListGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, localio.o(i.localChanelListGet))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
</UL>

<P><STRONG><a name="[328]"></a>localChannelNodeGet</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, localio.o(i.localChannelNodeGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = localChannelNodeGet &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
</UL>

<P><STRONG><a name="[329]"></a>localExtractPacket</STRONG> (Thumb, 354 bytes, Stack size 32 bytes, localprotocol.o(i.localExtractPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = localExtractPacket &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
</UL>

<P><STRONG><a name="[32d]"></a>localFdGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, localio.o(i.localFdGet))
<BR><BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWrite
</UL>

<P><STRONG><a name="[2d7]"></a>localRecCbFunGet</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, localio.o(i.localRecCbFunGet))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialRecHandle
</UL>

<P><STRONG><a name="[a7]"></a>localRecDataCb</STRONG> (Thumb, 722 bytes, Stack size 96 bytes, localio.o(i.localRecDataCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = localRecDataCb &rArr; localWriteAck &rArr; localWrite &rArr; gatLocalSend &rArr; localTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localTrigSend
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLocalTimerMSStop
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWriteAck
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localExtractPacket
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isNeed2AckdCmd
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalErrHandle
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAddTail
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCheckSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localSendListGet
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localSemIdGet
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecvListGet
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localChannelNodeGet
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localChanelListGet
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListEmpty
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> localio.o(i.gatLocalioInit)
</UL>
<P><STRONG><a name="[2a0]"></a>localRecvListGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, localio.o(i.localRecvListGet))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
</UL>

<P><STRONG><a name="[2aa]"></a>localSemIdGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, localio.o(i.localSemIdGet))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
</UL>

<P><STRONG><a name="[2a9]"></a>localSendListGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, localio.o(i.localSendListGet))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
</UL>

<P><STRONG><a name="[2ab]"></a>localTrigSend</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, semaph.o(i.localTrigSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = localTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semV
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
</UL>

<P><STRONG><a name="[32c]"></a>localWrite</STRONG> (Thumb, 430 bytes, Stack size 72 bytes, localprotocol.o(i.localWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = localWrite &rArr; gatLocalSend &rArr; localTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localFdGet
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWriteP0
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWriteAck
</UL>

<P><STRONG><a name="[2a5]"></a>localWriteAck</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, localprotocol.o(i.localWriteAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = localWriteAck &rArr; localWrite &rArr; gatLocalSend &rArr; localTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRecAuthKey
</UL>

<P><STRONG><a name="[a4]"></a>localWriteP0</STRONG> (Thumb, 50 bytes, Stack size 48 bytes, localprotocol.o(i.localWriteP0))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = localWriteP0 &rArr; localWrite &rArr; gatLocalSend &rArr; localTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWrite
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newLocalSn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> local.o(i.gatLocalInit)
</UL>
<P><STRONG><a name="[27c]"></a>m2mInfoGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gatm2m.o(i.m2mInfoGet))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetM2MPort
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetM2MDomain
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStart
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReInit
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetM2MPort
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetM2MDomain
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MInit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttSendPubData
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDoHeartBeat
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttSubTopicS
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttPingTimeSetAlive
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttConnBrokerInit
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHeartBeatStop
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHeartBeatStart
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MSubTopicCb
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onAppOnLineNumCb
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktRecCb
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktConnCb
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MStopReStartServer
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MSocketConnect
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStop
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServer
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MCommand
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatm2mDnsCb
</UL>

<P><STRONG><a name="[2bb]"></a>m2mInfoSet</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, gatm2m.o(i.m2mInfoSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = m2mInfoSet &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetM2MPort
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetM2MDomain
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MInit
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttPingTimeSetAlive
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktRecCb
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktConnCb
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MSocketConnect
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatm2mDnsCb
</UL>

<P><STRONG><a name="[ac]"></a>m2mSktConnCb</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, gatm2m.o(i.m2mSktConnCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = m2mSktConnCb &rArr; gatM2MReStartServer &rArr; gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpListenAdd
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttConnBrokerInit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoSet
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MStopReStartServer
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServer
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatm2m.o(i.gatM2MServerStart)
</UL>
<P><STRONG><a name="[bc]"></a>m2mSktRecCb</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gatm2m.o(i.m2mSktRecCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = m2mSktRecCb &rArr; mqttExtractPacket &rArr; mqttDataHandle &rArr; onM2MLoginCb &rArr; gatM2MReStartServer &rArr; gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDelChNode
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoSet
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatm2m.o(i.m2mSktConnCb)
</UL>
<P><STRONG><a name="[77]"></a>main</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensors
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RNG_Init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Console_UART_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADO_UART4_Init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[200]"></a>mix_columns</STRONG> (Thumb, 82 bytes, Stack size 28 bytes, aes.o(i.mix_columns))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = mix_columns &rArr; coef_mult &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coef_mult
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cipher
</UL>

<P><STRONG><a name="[32f]"></a>mqttConnBrokerInit</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, mqttgat.o(i.mqttConnBrokerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = mqttConnBrokerInit &rArr; mqtt_connect &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoGet
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_set_alive
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_init_auth
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_init
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_connect
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktConnCb
</UL>

<P><STRONG><a name="[336]"></a>mqttDataHandle</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, mqttgat.o(i.mqttDataHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = mqttDataHandle &rArr; onM2MLoginCb &rArr; gatM2MReStartServer &rArr; gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MUserDataRecCb
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MSubTopicCb
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MLoginCb
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MHeartBeatCb
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
</UL>

<P><STRONG><a name="[a8]"></a>mqttDoHeartBeat</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, mqttgat.o(i.mqttDoHeartBeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = mqttDoHeartBeat &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoGet
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_ping
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mqttgat.o(i.gatM2MHeartBeatStart)
</UL>
<P><STRONG><a name="[330]"></a>mqttExtractPacket</STRONG> (Thumb, 638 bytes, Stack size 40 bytes, mqttgat.o(i.mqttExtractPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = mqttExtractPacket &rArr; mqttDataHandle &rArr; onM2MLoginCb &rArr; gatM2MReStartServer &rArr; gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_num_rem_len_bytes_safe
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_rem_len
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDataHandle
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttNodeRecInit
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mSktRecCb
</UL>

<P><STRONG><a name="[341]"></a>mqttPingTimeSetAlive</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mqttgat.o(i.mqttPingTimeSetAlive))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mqttPingTimeSetAlive &rArr; m2mInfoSet &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoSet
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MHeartBeatCb
</UL>

<P><STRONG><a name="[246]"></a>mqttSendPubData</STRONG> (Thumb, 120 bytes, Stack size 56 bytes, mqttgat.o(i.mqttSendPubData))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = mqttSendPubData &rArr; mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_publish_with_qos
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCloudGizDataSend
</UL>

<P><STRONG><a name="[343]"></a>mqttSubTopicS</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mqttgat.o(i.mqttSubTopicS))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = mqttSubTopicS &rArr; mqtt_subscribes &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_subscribes
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MLoginCb
</UL>

<P><STRONG><a name="[335]"></a>mqtt_connect</STRONG> (Thumb, 634 bytes, Stack size 80 bytes, mqttlib.o(i.mqtt_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mqtt_connect &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttConnBrokerInit
</UL>

<P><STRONG><a name="[332]"></a>mqtt_init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, mqttlib.o(i.mqtt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mqtt_init &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttConnBrokerInit
</UL>

<P><STRONG><a name="[333]"></a>mqtt_init_auth</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, mqttlib.o(i.mqtt_init_auth))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mqtt_init_auth &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttConnBrokerInit
</UL>

<P><STRONG><a name="[2f7]"></a>mqtt_len_of_bytes</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, mqttlib.o(i.mqtt_len_of_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mqtt_len_of_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_subscribes
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatUpLoadDataCombine
</UL>

<P><STRONG><a name="[2ff]"></a>mqtt_num_rem_len_bytes</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, mqttlib.o(i.mqtt_num_rem_len_bytes))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWanCmd
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_pub_msg_ptr
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_pub_topic_ptr
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_msg_id
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MUserDataRecCb
</UL>

<P><STRONG><a name="[253]"></a>mqtt_num_rem_len_bytes_safe</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, mqttlib.o(i.mqtt_num_rem_len_bytes_safe))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mqtt_num_rem_len_bytes_safe &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload90
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
</UL>

<P><STRONG><a name="[340]"></a>mqtt_parse_msg_id</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, mqttlib.o(i.mqtt_parse_msg_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mqtt_parse_msg_id
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_num_rem_len_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttNodeRecInit
</UL>

<P><STRONG><a name="[345]"></a>mqtt_parse_pub_msg_ptr</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, mqttlib.o(i.mqtt_parse_pub_msg_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mqtt_parse_pub_msg_ptr &rArr; mqtt_parse_rem_len
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_rem_len
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_num_rem_len_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_publish_msg
</UL>

<P><STRONG><a name="[33e]"></a>mqtt_parse_pub_topic_ptr</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mqttlib.o(i.mqtt_parse_pub_topic_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mqtt_parse_pub_topic_ptr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_num_rem_len_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttNodeRecInit
</UL>

<P><STRONG><a name="[33f]"></a>mqtt_parse_publish_msg</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, mqttlib.o(i.mqtt_parse_publish_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = mqtt_parse_publish_msg &rArr; mqtt_parse_pub_msg_ptr &rArr; mqtt_parse_rem_len
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_pub_msg_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttNodeRecInit
</UL>

<P><STRONG><a name="[33c]"></a>mqtt_parse_rem_len</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, mqttlib.o(i.mqtt_parse_rem_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mqtt_parse_rem_len
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_pub_msg_ptr
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
</UL>

<P><STRONG><a name="[33b]"></a>mqtt_ping</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, mqttlib.o(i.mqtt_ping))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mqtt_ping
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDoHeartBeat
</UL>

<P><STRONG><a name="[342]"></a>mqtt_publish_with_qos</STRONG> (Thumb, 482 bytes, Stack size 96 bytes, mqttlib.o(i.mqtt_publish_with_qos))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttSendPubData
</UL>

<P><STRONG><a name="[334]"></a>mqtt_set_alive</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mqttlib.o(i.mqtt_set_alive))
<BR><BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttConnBrokerInit
</UL>

<P><STRONG><a name="[344]"></a>mqtt_subscribes</STRONG> (Thumb, 438 bytes, Stack size 72 bytes, mqttlib.o(i.mqtt_subscribes))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = mqtt_subscribes &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_len_of_bytes
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttSubTopicS
</UL>

<P><STRONG><a name="[346]"></a>network_connect</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, network.o(i.network_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = network_connect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_OpenClientConnection
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetHostAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
</UL>

<P><STRONG><a name="[22d]"></a>network_credential</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, network.o(i.network_credential))
<BR><BR>[Stack]<UL><LI>Max Depth = 2336<LI>Call Chain = network_credential &rArr; updateWiFiCredentials &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateWiFiCredentials
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[22f]"></a>network_get_ip_address</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, network.o(i.network_get_ip_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = network_get_ip_address &rArr; WIFI_GetIP_Address &rArr; ES_WIFI_IsConnected &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetIP_Address
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[22e]"></a>network_init</STRONG> (Thumb, 252 bytes, Stack size 80 bytes, network.o(i.network_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 2392<LI>Call Chain = network_init &rArr; updateWiFiCredentials &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Init
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetModuleName
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetModuleID
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetModuleFwRevision
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_GetMAC_Address
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Connect
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateWiFiCredentials
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWiFiCredentials
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[347]"></a>network_socket_close</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, network.o(i.network_socket_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = network_socket_close &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_CloseClientConnection
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
</UL>

<P><STRONG><a name="[348]"></a>network_socket_recv</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, network.o(i.network_socket_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = network_socket_recv &rArr; WIFI_ReceiveData &rArr; ES_WIFI_ReceiveData &rArr; AT_RequestReceiveData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReceiveData
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
</UL>

<P><STRONG><a name="[349]"></a>network_socket_send</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, network.o(i.network_socket_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = network_socket_send &rArr; WIFI_SendData &rArr; ES_WIFI_SendData &rArr; AT_RequestSendData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRTCTimeDateFromNetwork
</UL>

<P><STRONG><a name="[254]"></a>ntohl</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, iofdev.o(i.ntohl))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ntohl &rArr; checkCPUendian
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCPUendian
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MUserDataRecCb
</UL>

<P><STRONG><a name="[255]"></a>ntohs</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, iofdev.o(i.ntohs))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ntohs &rArr; checkCPUendian
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkCPUendian
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gizWiFiStatus
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWanCmd
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLanCmd
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onOTA41EventNoticCb
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onM2MUserDataRecCb
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onAppOnLineNumCb
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MCommand
</UL>

<P><STRONG><a name="[2af]"></a>nwkHalStatusGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, nwk_manage.o(i.nwkHalStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSendStatus
</UL>

<P><STRONG><a name="[14]"></a>onAppOnLineNumCb</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, gatm2m.o(i.onAppOnLineNumCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = onAppOnLineNumCb &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLanLoginClientNumGet
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[33a]"></a>onM2MHeartBeatCb</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gatm2m.o(i.onM2MHeartBeatCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = onM2MHeartBeatCb &rArr; mqttPingTimeSetAlive &rArr; m2mInfoSet &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttPingTimeSetAlive
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDataHandle
</UL>

<P><STRONG><a name="[337]"></a>onM2MLoginCb</STRONG> (Thumb, 110 bytes, Stack size 160 bytes, gatm2m.o(i.onM2MLoginCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = onM2MLoginCb &rArr; gatM2MReStartServer &rArr; gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttSubTopicS
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MStopReStartServer
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServer
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDataHandle
</UL>

<P><STRONG><a name="[339]"></a>onM2MSubTopicCb</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gatm2m.o(i.onM2MSubTopicCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = onM2MSubTopicCb &rArr; gatM2MReStartServer &rArr; gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MHeartBeatStart
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MStopReStartServer
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServer
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDataHandle
</UL>

<P><STRONG><a name="[338]"></a>onM2MUserDataRecCb</STRONG> (Thumb, 364 bytes, Stack size 128 bytes, gatm2m.o(i.onM2MUserDataRecCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = onM2MUserDataRecCb &rArr; dpTrans &rArr; getWanCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohl
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_num_rem_len_bytes
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dpTrans
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttDataHandle
</UL>

<P><STRONG><a name="[13]"></a>onOTA41EventNoticCb</STRONG> (Thumb, 468 bytes, Stack size 184 bytes, gatm2m.o(i.onOTA41EventNoticCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = onOTA41EventNoticCb &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>onOTA4EventNoticCb</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, gatm2m.o(i.onOTA4EventNoticCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = onOTA4EventNoticCb &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmdtable.o(.data)
</UL>
<P><STRONG><a name="[f0]"></a>osDelay</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, cmsis_os.o(i.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TcpDataSendThread
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TcpDataRecThread
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialSendThread
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialRecThread
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofThreadDelay
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerThread
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDetectThread
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_check_thread
</UL>

<P><STRONG><a name="[331]"></a>osKernelStart</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cmsis_os.o(i.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[318]"></a>osMessageCreate</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cmsis_os.o(i.osMessageCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osMessageCreate &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofMsgCreat
</UL>

<P><STRONG><a name="[319]"></a>osMessageGet</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, cmsis_os.o(i.osMessageGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osMessageGet &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofRecSig
</UL>

<P><STRONG><a name="[320]"></a>osMessagePut</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, cmsis_os.o(i.osMessagePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
</UL>

<P><STRONG><a name="[1c5]"></a>osMutexCreate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cmsis_os.o(i.osMutexCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osMutexCreate &rArr; xQueueCreateMutex &rArr; prvInitialiseMutex &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_Init
</UL>

<P><STRONG><a name="[1c1]"></a>osMutexDelete</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cmsis_os.o(i.osMutexDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osMutexDelete &rArr; vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_DeInit
</UL>

<P><STRONG><a name="[f5]"></a>osMutexRelease</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, cmsis_os.o(i.osMutexRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = osMutexRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_IsConnected
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Connect
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_StopClientConnection
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_StartClientConnection
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_SendData
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_ReceiveData
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Init
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetNetworkSettings
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetMACAddress
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_DNS_LookUp
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_SendData
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ReceiveData
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestSendData
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestReceiveData
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
</UL>

<P><STRONG><a name="[f2]"></a>osMutexWait</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, cmsis_os.o(i.osMutexWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_IsConnected
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Connect
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_StopClientConnection
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_StartClientConnection
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_SendData
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_ReceiveData
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Init
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetNetworkSettings
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetMACAddress
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_DNS_LookUp
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_SendData
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ReceiveData
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestSendData
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_RequestReceiveData
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ExecuteCommand
</UL>

<P><STRONG><a name="[31f]"></a>osPoolAlloc</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, cmsis_os.o(i.osPoolAlloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osPoolAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
</UL>

<P><STRONG><a name="[317]"></a>osPoolCreate</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, cmsis_os.o(i.osPoolCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = osPoolCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofMsgCreat
</UL>

<P><STRONG><a name="[31a]"></a>osPoolFree</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, cmsis_os.o(i.osPoolFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osPoolFree
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofRecSig
</UL>

<P><STRONG><a name="[1c6]"></a>osSemaphoreCreate</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, cmsis_os.o(i.osSemaphoreCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osSemaphoreCreate &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialInit
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofMsgCreat
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketOpen
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_Init
</UL>

<P><STRONG><a name="[1c2]"></a>osSemaphoreDelete</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cmsis_os.o(i.osSemaphoreDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osSemaphoreDelete &rArr; vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_DeInit
</UL>

<P><STRONG><a name="[ec]"></a>osSemaphoreRelease</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, cmsis_os.o(i.osSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_write
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TcpDataRecThread
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofGetHostByName
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ISR
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDetectThread
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_check_thread
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofTcpSend
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketTcpRecv
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
</UL>

<P><STRONG><a name="[ea]"></a>osSemaphoreWait</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, cmsis_os.o(i.osSemaphoreWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osSemaphoreWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_write
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofGetHostByName
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDetectThread
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_check_thread
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofTcpSend
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketTcpRecv
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketConnect
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSelect
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_Init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_spi_tx_event
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_spi_rx_event
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_cmddata_rdy_rising_event
</UL>

<P><STRONG><a name="[1d0]"></a>osSystickHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cmsis_os.o(i.osSystickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osSystickHandler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[296]"></a>osThreadCreate</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, cmsis_os.o(i.osThreadCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osThreadCreate &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;makeFreeRtosPriority
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofStartAllThread
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensors
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofTimerInit
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketOpen
</UL>

<P><STRONG><a name="[300]"></a>osThreadIsSuspended</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cmsis_os.o(i.osThreadIsSuspended))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osThreadIsSuspended &rArr; eTaskGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gizIssuedProcess
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerEventHandler
</UL>

<P><STRONG><a name="[301]"></a>osThreadResume</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, cmsis_os.o(i.osThreadResume))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = osThreadResume &rArr; xTaskResumeFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gizIssuedProcess
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerEventHandler
</UL>

<P><STRONG><a name="[358]"></a>osThreadSuspend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cmsis_os.o(i.osThreadSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osThreadSuspend &rArr; vTaskSuspend
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_thread
</UL>

<P><STRONG><a name="[312]"></a>osTimerCreate</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, cmsis_os.o(i.osTimerCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = osTimerCreate &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLocalTimerMSStart
</UL>

<P><STRONG><a name="[315]"></a>osTimerDelete</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, cmsis_os.o(i.osTimerDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = osTimerDelete &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLocalTimerMSStop
</UL>

<P><STRONG><a name="[313]"></a>osTimerStart</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, cmsis_os.o(i.osTimerStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osTimerStart &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inHandlerMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLocalTimerMSStart
</UL>

<P><STRONG><a name="[131]"></a>pvPortMalloc</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReceiveHandle
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetStartScan
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolCreate
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareDownloadCb
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesInit
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Encrypt
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Decrypt
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpListenAdd
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localExtractPacket
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalioInit
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisable
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDumpEnvInfo
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecNodeInit
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseHead
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_subscribes
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_publish_with_qos
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_connect
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatUpLoadDataCombine
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSboxInit
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWrite
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[394]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[1ae]"></a>pvTimerGetTimerID</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, timers.o(i.pvTimerGetTimerID))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pvTimerGetTimerID
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocaltimerHandler
</UL>

<P><STRONG><a name="[371]"></a>pxPortInitialiseStack</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[c8]"></a>recv_check_thread</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, iofsocket.o(i.recv_check_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = recv_check_thread &rArr; WIFI_ReceiveData &rArr; ES_WIFI_ReceiveData &rArr; AT_RequestReceiveData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReceiveData
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iofsocket.o(.constdata)
</UL>
<P><STRONG><a name="[325]"></a>rot_word</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, aes.o(i.rot_word))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_expansion
</UL>

<P><STRONG><a name="[1fb]"></a>sboxAssign</STRONG> (Thumb, 2062 bytes, Stack size 8 bytes, aesdata.o(i.sboxAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sboxAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesInit
</UL>

<P><STRONG><a name="[316]"></a>semOp</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, semaph.o(i.semOp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semV
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semP
</UL>

<P><STRONG><a name="[2d8]"></a>semP</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, semaph.o(i.semP))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = semP &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semOp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDataSendHandle
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
</UL>

<P><STRONG><a name="[32b]"></a>semV</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, semaph.o(i.semV))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semOp
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpTrigSend
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localTrigSend
</UL>

<P><STRONG><a name="[c3]"></a>sensor_thread</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, sensors_data.o(i.sensor_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = sensor_thread &rArr; gagentUploadData &rArr; gatCloudGizDataSend &rArr; mqttSendPubData &rArr; mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSuspend
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareMqttPayload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensors_data.o(.constdata)
</UL>
<P><STRONG><a name="[230]"></a>setRTCTimeDateFromNetwork</STRONG> (Thumb, 678 bytes, Stack size 344 bytes, timedate.o(i.setRTCTimeDateFromNetwork))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = setRTCTimeDateFromNetwork &rArr; network_socket_send &rArr; WIFI_SendData &rArr; ES_WIFI_SendData &rArr; AT_RequestSendData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_socket_send
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_socket_recv
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_socket_close
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_connect
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[1ff]"></a>shift_rows</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, aes.o(i.shift_rows))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = shift_rows
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cipher
</UL>

<P><STRONG><a name="[93]"></a>simulatorM2MUploadDataCb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, simulatorcomm.o(i.simulatorM2MUploadDataCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = simulatorM2MUploadDataCb &rArr; simulatorUploadDtatCb &rArr; gatTimerDel &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulatorUploadDtatCb
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simulatorcomm.o(i.gagentUploadData)
</UL>
<P><STRONG><a name="[95]"></a>simulatorUploadDtatTimeOutCb</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, simulatorcomm.o(i.simulatorUploadDtatTimeOutCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = simulatorUploadDtatTimeOutCb &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simulatorcomm.o(i.gagentUploadData)
</UL>
<P><STRONG><a name="[2de]"></a>sktConnHandle</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, tcp.o(i.sktConnHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sktConnHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>

<P><STRONG><a name="[19e]"></a>strToHex</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, gatutilcode.o(i.strToHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = strToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofToupper
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalModuleCheck
</UL>

<P><STRONG><a name="[1fe]"></a>sub_bytes</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, aes.o(i.sub_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sub_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cipher
</UL>

<P><STRONG><a name="[326]"></a>sub_word</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, aes.o(i.sub_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sub_word
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_expansion
</UL>

<P><STRONG><a name="[2dc]"></a>tcpRecHandle</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, tcp.o(i.tcpRecHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = tcpRecHandle &rArr; gatTcpReadRecData &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpReadRecData
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDelTcpDataNode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>

<P><STRONG><a name="[2df]"></a>tcpSendCBHandle</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, tcp.o(i.tcpSendCBHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = tcpSendCBHandle &rArr; tcpTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpTrigSend
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListEmpty
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTaskHandle
</UL>

<P><STRONG><a name="[385]"></a>tcpTrigSend</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, semaph.o(i.tcpTrigSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = tcpTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semV
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendListAdd
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendCBHandle
</UL>

<P><STRONG><a name="[1d6]"></a>timerCb</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ioftime.o(i.timerCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = timerCb &rArr; gatTimerTick &rArr; timerTriggerNotifyLp &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTraversal
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerThread
</UL>

<P><STRONG><a name="[1d7]"></a>timerEventHandler</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ioftime.o(i.timerEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = timerEventHandler &rArr; osThreadResume &rArr; xTaskResumeFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadResume
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadIsSuspended
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerThread
</UL>

<P><STRONG><a name="[e8]"></a>updateWiFiCredentials</STRONG> (Thumb, 184 bytes, Stack size 136 bytes, iot_flash_config.o(i.updateWiFiCredentials))
<BR><BR>[Stack]<UL><LI>Max Depth = 2312<LI>Call Chain = updateWiFiCredentials &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_update
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getInputString
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;network_credential
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APDetectThread
</UL>

<P><STRONG><a name="[231]"></a>userInit</STRONG> (Thumb, 238 bytes, Stack size 296 bytes, gagent_iot_test_basic_connectivity.o(i.userInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 3344<LI>Call Chain = userInit &rArr; gagentInit &rArr; gatInit &rArr; gatLocalInit &rArr; gatAuthInit &rArr; gatReqAuthKey &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNwkevtCbRegister
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentInit
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgentEnableBind
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[35d]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[363]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[370]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[35f]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[35e]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[215]"></a>vPortEnterCritical</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolAlloc
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[216]"></a>vPortExitCritical</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolAlloc
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[132]"></a>vPortFree</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentUploadData
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSerialSendHandle
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolCreate
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirmwareDownloadCb
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalRecTimerOutHandle
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Encrypt
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Decrypt
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDestroy
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packRegPkt
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSendTask
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpDelChNode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDelTcpDataNode
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localExtractPacket
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localRecDataCb
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSend
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpSendCBHandle
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisable
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalHandle
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCloudGizDataSend
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSendCb
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDumpEnvInfo
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseHead
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_subscribes
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_publish_with_qos
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_connect
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMqttReInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatCleanMqttCacheBuf
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigInfoSaveToEnv
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerHandle
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWrite
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpSendCb
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelSendNode
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelRecNode
</UL>

<P><STRONG><a name="[390]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[386]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[364]"></a>vQueueAddToRegistry</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, queue.o(i.vQueueAddToRegistry))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[350]"></a>vQueueDelete</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, queue.o(i.vQueueDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreDelete
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>

<P><STRONG><a name="[388]"></a>vQueueUnregisterQueue</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, queue.o(i.vQueueUnregisterQueue))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[37a]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, queue.o(i.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[34a]"></a>vTaskDelay</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[380]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[38a]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[389]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[38b]"></a>vTaskPriorityInherit</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[357]"></a>vTaskResume</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, tasks.o(i.vTaskResume))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vTaskResume &rArr; prvTaskIsTaskSuspended
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskIsTaskSuspended
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadResume
</UL>

<P><STRONG><a name="[395]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tasks.o(i.vTaskSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
</UL>

<P><STRONG><a name="[34b]"></a>vTaskStartScheduler</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[359]"></a>vTaskSuspend</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, tasks.o(i.vTaskSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskSuspend
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSuspend
</UL>

<P><STRONG><a name="[366]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[cf]"></a>vTaskSwitchContext</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[38e]"></a>xPortStartScheduler</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[353]"></a>xPortSysTickHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, port.o(i.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSystickHandler
</UL>

<P><STRONG><a name="[31e]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSemInit
</UL>

<P><STRONG><a name="[34f]"></a>xQueueCreateMutex</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, queue.o(i.xQueueCreateMutex))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xQueueCreateMutex &rArr; prvInitialiseMutex &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexCreate
</UL>

<P><STRONG><a name="[31b]"></a>xQueueGenericCreate</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageCreate
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSemInit
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
</UL>

<P><STRONG><a name="[31d]"></a>xQueueGenericReceive</STRONG> (Thumb, 446 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semOp
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageGet
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSemInit
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[36e]"></a>xQueueGenericReset</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[31c]"></a>xQueueGenericSend</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semOp
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessagePut
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSemInit
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseMutex
</UL>

<P><STRONG><a name="[34e]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessagePut
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[351]"></a>xQueueGiveFromISR</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>

<P><STRONG><a name="[34d]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, queue.o(i.xQueueReceiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageGet
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
</UL>

<P><STRONG><a name="[396]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[355]"></a>xTaskCreate</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[352]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSystickHandler
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[37b]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[393]"></a>xTaskIncrementTick</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[36b]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[37f]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[367]"></a>xTaskResumeAll</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[356]"></a>xTaskResumeFromISR</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, tasks.o(i.xTaskResumeFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskIsTaskSuspended
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadResume
</UL>

<P><STRONG><a name="[35a]"></a>xTimerCreate</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, timers.o(i.xTimerCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerCreate
</UL>

<P><STRONG><a name="[38d]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, timers.o(i.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[35b]"></a>xTimerGenericCommand</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, timers.o(i.xTimerGenericCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1ad]"></a>IWDG_Refresh_Count_Test</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gagent_iot_test_basic_connectivity.o(i.IWDG_Refresh_Count_Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IWDG_Refresh_Count_Test
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[1b0]"></a>MX_IWDG_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gagent_iot_test_basic_connectivity.o(i.MX_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_IWDG_Init &rArr; HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagent_test
</UL>

<P><STRONG><a name="[2fb]"></a>getInputString</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, iot_flash_config.o(i.getInputString))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = getInputString &rArr; getc &rArr; fgetc &rArr; HAL_UART_Receive &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateWiFiCredentials
</UL>

<P><STRONG><a name="[321]"></a>serial_read</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, iofserial.o(i.serial_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = serial_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialRead
</UL>

<P><STRONG><a name="[322]"></a>serial_write</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, iofserial.o(i.serial_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = serial_write &rArr; osSemaphoreWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSerialSend
</UL>

<P><STRONG><a name="[e3]"></a>ADO_UART4_Init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(i.ADO_UART4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ADO_UART4_Init &rArr; BSP_UART4_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_UART4_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>BSP_UART4_Init</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, main.o(i.BSP_UART4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = BSP_UART4_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADO_UART4_Init
</UL>

<P><STRONG><a name="[145]"></a>Button_ISR</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.Button_ISR))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[10e]"></a>Console_UART_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.Console_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Console_UART_Init &rArr; BSP_COM_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_COM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b8]"></a>RTC_Init</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, main.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RTC_Init &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d1]"></a>SystemClock_Config</STRONG> (Thumb, 176 bytes, Stack size 232 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_EnableMSIPLLMode
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c3]"></a>SPI_WIFI_DelayUs</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, es_wifi_io.o(i.SPI_WIFI_DelayUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WIFI_DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ResetModule
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_SendData
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ReceiveData
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_Init
</UL>

<P><STRONG><a name="[1cb]"></a>wait_cmddata_rdy_high</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, es_wifi_io.o(i.wait_cmddata_rdy_high))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wait_cmddata_rdy_high
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_SendData
</UL>

<P><STRONG><a name="[1c8]"></a>wait_cmddata_rdy_rising_event</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, es_wifi_io.o(i.wait_cmddata_rdy_rising_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = wait_cmddata_rdy_rising_event &rArr; osSemaphoreWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ReceiveData
</UL>

<P><STRONG><a name="[1c9]"></a>wait_spi_rx_event</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, es_wifi_io.o(i.wait_spi_rx_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = wait_spi_rx_event &rArr; osSemaphoreWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_ReceiveData
</UL>

<P><STRONG><a name="[1cd]"></a>wait_spi_tx_event</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, es_wifi_io.o(i.wait_spi_tx_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = wait_spi_tx_event &rArr; osSemaphoreWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WIFI_SendData
</UL>

<P><STRONG><a name="[1a7]"></a>I2Cx_Error</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32l475e_iot01.o(i.I2Cx_Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = I2Cx_Error &rArr; I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_WriteMultiple
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>

<P><STRONG><a name="[1a8]"></a>I2Cx_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32l475e_iot01.o(i.I2Cx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
</UL>

<P><STRONG><a name="[1a9]"></a>I2Cx_MspInit</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, stm32l475e_iot01.o(i.I2Cx_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[1ab]"></a>I2Cx_ReadMultiple</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, stm32l475e_iot01.o(i.I2Cx_ReadMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_ReadMultiple
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Read
</UL>

<P><STRONG><a name="[1ac]"></a>I2Cx_WriteMultiple</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, stm32l475e_iot01.o(i.I2Cx_WriteMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SENSOR_IO_Write
</UL>

<P><STRONG><a name="[f1]"></a>AT_ExecuteCommand</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, es_wifi.o(i.AT_ExecuteCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_IsConnected
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Connect
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_StopClientConnection
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_StartClientConnection
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_SendData
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_ReceiveData
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Init
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetNetworkSettings
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetMACAddress
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_DNS_LookUp
</UL>

<P><STRONG><a name="[f6]"></a>AT_ParseConnSettings</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, es_wifi.o(i.AT_ParseConnSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AT_ParseConnSettings &rArr; ParseIP &rArr; ParseNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseNumber
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseIP
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetNetworkSettings
</UL>

<P><STRONG><a name="[fb]"></a>AT_ParseInfo</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, es_wifi.o(i.AT_ParseInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AT_ParseInfo &rArr; ParseNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseNumber
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_Init
</UL>

<P><STRONG><a name="[115]"></a>AT_ParseIsConnected</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, es_wifi.o(i.AT_ParseIsConnected))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_IsConnected
</UL>

<P><STRONG><a name="[fc]"></a>AT_RequestReceiveData</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, es_wifi.o(i.AT_RequestReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = AT_RequestReceiveData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_ReceiveData
</UL>

<P><STRONG><a name="[ff]"></a>AT_RequestSendData</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, es_wifi.o(i.AT_RequestSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = AT_RequestSendData &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_SendData
</UL>

<P><STRONG><a name="[1b2]"></a>Hex2Num</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, es_wifi.o(i.Hex2Num))
<BR><BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseHexNumber
</UL>

<P><STRONG><a name="[1b1]"></a>ParseHexNumber</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, es_wifi.o(i.ParseHexNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ParseHexNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Num
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseMAC
</UL>

<P><STRONG><a name="[fa]"></a>ParseIP</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, es_wifi.o(i.ParseIP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ParseIP &rArr; ParseNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_DNS_LookUp
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ParseConnSettings
</UL>

<P><STRONG><a name="[112]"></a>ParseMAC</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, es_wifi.o(i.ParseMAC))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ParseMAC &rArr; ParseHexNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseHexNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ES_WIFI_GetMACAddress
</UL>

<P><STRONG><a name="[f9]"></a>ParseNumber</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, es_wifi.o(i.ParseNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ParseNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseIP
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ParseInfo
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ParseConnSettings
</UL>

<P><STRONG><a name="[15c]"></a>NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_cortex.o(i.NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[15d]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32l4xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[142]"></a>FLASH_Program_DoubleWord</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32l4xx_hal_flash.o(i.FLASH_Program_DoubleWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_Program_DoubleWord
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[143]"></a>FLASH_Program_Fast</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32l4xx_hal_flash.o(i.FLASH_Program_Fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_Program_Fast
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[122]"></a>FLASH_SetErrorCode</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, stm32l4xx_hal_flash.o(i.FLASH_SetErrorCode))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[13b]"></a>FLASH_MassErase</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_MassErase))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[141]"></a>FLASH_OB_GetPCROP</STRONG> (Thumb, 178 bytes, Stack size 20 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_OB_GetPCROP))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_OB_GetPCROP
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBGetConfig
</UL>

<P><STRONG><a name="[13f]"></a>FLASH_OB_GetRDP</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_OB_GetRDP))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBGetConfig
</UL>

<P><STRONG><a name="[140]"></a>FLASH_OB_GetUser</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_OB_GetUser))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBGetConfig
</UL>

<P><STRONG><a name="[13e]"></a>FLASH_OB_GetWRP</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_OB_GetWRP))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBGetConfig
</UL>

<P><STRONG><a name="[11d]"></a>FLASH_OB_PCROPConfig</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_OB_PCROPConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FLASH_OB_PCROPConfig &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBProgram
</UL>

<P><STRONG><a name="[11f]"></a>FLASH_OB_RDPConfig</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_OB_RDPConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_OB_RDPConfig &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBProgram
</UL>

<P><STRONG><a name="[120]"></a>FLASH_OB_UserConfig</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_OB_UserConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_OB_UserConfig &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBProgram
</UL>

<P><STRONG><a name="[121]"></a>FLASH_OB_WRPConfig</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, stm32l4xx_hal_flash_ex.o(i.FLASH_OB_WRPConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_OB_WRPConfig &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBProgram
</UL>

<P><STRONG><a name="[1a6]"></a>I2C_Flush_TXDR</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32l4xx_hal_i2c.o(i.I2C_Flush_TXDR))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>

<P><STRONG><a name="[1a5]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
</UL>

<P><STRONG><a name="[14d]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, stm32l4xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[151]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, stm32l4xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[14e]"></a>I2C_TransferConfig</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32l4xx_hal_i2c.o(i.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[14c]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[14f]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[152]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32l4xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[166]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc.o(i.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_GetVoltageRange
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[15f]"></a>RCCEx_PLLSAI1_Config</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLLSAI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[160]"></a>RCCEx_PLLSAI2_Config</STRONG> (Thumb, 342 bytes, Stack size 24 bytes, stm32l4xx_hal_rcc_ex.o(i.RCCEx_PLLSAI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLLSAI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[81]"></a>SPI_2linesRxISR_16BIT</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_2linesRxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SPI_2linesRxISR_16BIT &rArr; SPI_CloseRxTx_ISR &rArr; HAL_SPI_RxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRxTx_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT)
</UL>
<P><STRONG><a name="[83]"></a>SPI_2linesRxISR_8BIT</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_2linesRxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SPI_2linesRxISR_8BIT &rArr; SPI_CloseRxTx_ISR &rArr; HAL_SPI_RxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRxTx_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT)
</UL>
<P><STRONG><a name="[82]"></a>SPI_2linesTxISR_16BIT</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_2linesTxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SPI_2linesTxISR_16BIT &rArr; SPI_CloseRxTx_ISR &rArr; HAL_SPI_RxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRxTx_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT)
</UL>
<P><STRONG><a name="[84]"></a>SPI_2linesTxISR_8BIT</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_2linesTxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SPI_2linesTxISR_8BIT &rArr; SPI_CloseRxTx_ISR &rArr; HAL_SPI_RxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRxTx_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT)
</UL>
<P><STRONG><a name="[1bb]"></a>SPI_CloseRxTx_ISR</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32l4xx_hal_spi.o(i.SPI_CloseRxTx_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SPI_CloseRxTx_ISR &rArr; HAL_SPI_RxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxCpltCallback
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2linesTxISR_16BIT
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2linesRxISR_8BIT
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2linesRxISR_16BIT
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2linesTxISR_8BIT
</UL>

<P><STRONG><a name="[1bd]"></a>SPI_CloseRx_ISR</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32l4xx_hal_spi.o(i.SPI_CloseRx_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SPI_CloseRx_ISR &rArr; HAL_SPI_RxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxISR_8BIT
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxISR_16BIT
</UL>

<P><STRONG><a name="[1be]"></a>SPI_CloseTx_ISR</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, stm32l4xx_hal_spi.o(i.SPI_CloseTx_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SPI_CloseTx_ISR &rArr; HAL_SPI_TxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TxISR_8BIT
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TxISR_16BIT
</UL>

<P><STRONG><a name="[7e]"></a>SPI_DMAAbortOnError</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32l4xx_hal_spi.o(i.SPI_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_IRQHandler)
</UL>
<P><STRONG><a name="[17a]"></a>SPI_EndRxTransaction</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.SPI_EndRxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_EndRxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRx_ISR
</UL>

<P><STRONG><a name="[17e]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTx_ISR
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRxTx_ISR
</UL>

<P><STRONG><a name="[7f]"></a>SPI_RxISR_16BIT</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_RxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SPI_RxISR_16BIT &rArr; SPI_CloseRx_ISR &rArr; HAL_SPI_RxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRx_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_IT)
</UL>
<P><STRONG><a name="[80]"></a>SPI_RxISR_8BIT</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_RxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SPI_RxISR_8BIT &rArr; SPI_CloseRx_ISR &rArr; HAL_SPI_RxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseRx_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Receive_IT)
</UL>
<P><STRONG><a name="[85]"></a>SPI_TxISR_16BIT</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_TxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SPI_TxISR_16BIT &rArr; SPI_CloseTx_ISR &rArr; HAL_SPI_TxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTx_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_IT)
</UL>
<P><STRONG><a name="[86]"></a>SPI_TxISR_8BIT</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32l4xx_hal_spi.o(i.SPI_TxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SPI_TxISR_8BIT &rArr; SPI_CloseTx_ISR &rArr; HAL_SPI_TxCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTx_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_spi.o(i.HAL_SPI_Transmit_IT)
</UL>
<P><STRONG><a name="[1c0]"></a>SPI_WaitFifoStateUntilTimeout</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, stm32l4xx_hal_spi.o(i.SPI_WaitFifoStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
</UL>

<P><STRONG><a name="[1bf]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, stm32l4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
</UL>

<P><STRONG><a name="[87]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[18c]"></a>UART_EndRxTransfer</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32l4xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[18f]"></a>UART_EndTransmit_IT</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32l4xx_hal_uart.o(i.UART_EndTransmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_EndTransmit_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[88]"></a>UART_RxISR_16BIT</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32l4xx_hal_uart.o(i.UART_RxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_RxISR_16BIT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_Receive_IT)
</UL>
<P><STRONG><a name="[89]"></a>UART_RxISR_8BIT</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, stm32l4xx_hal_uart.o(i.UART_RxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_RxISR_8BIT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l4xx_hal_uart.o(i.HAL_UART_Receive_IT)
</UL>
<P><STRONG><a name="[369]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>

<P><STRONG><a name="[36a]"></a>prvCopyDataToQueue</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[36c]"></a>prvInitialiseMutex</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, queue.o(i.prvInitialiseMutex))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = prvInitialiseMutex &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
</UL>

<P><STRONG><a name="[36d]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, queue.o(i.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[374]"></a>prvIsQueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[375]"></a>prvIsQueueFull</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueFull
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[37e]"></a>prvUnlockQueue</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[35c]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[360]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[365]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[368]"></a>prvDeleteTCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[c1]"></a>prvIdleTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[36f]"></a>prvInitialiseNewTask</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvInitialiseNewTask
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[361]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(i.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[38f]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[38c]"></a>prvTaskIsTaskSuspended</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, tasks.o(i.prvTaskIsTaskSuspended))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvTaskIsTaskSuspended
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
</UL>

<P><STRONG><a name="[362]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, timers.o(i.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[37d]"></a>prvGetNextExpireTime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, timers.o(i.prvGetNextExpireTime))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[372]"></a>prvInitialiseNewTimer</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, timers.o(i.prvInitialiseNewTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>

<P><STRONG><a name="[373]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, timers.o(i.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[376]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, timers.o(i.prvProcessExpiredTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = prvProcessExpiredTimer &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[377]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, timers.o(i.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[379]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, timers.o(i.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[378]"></a>prvSampleTimeNow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timers.o(i.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[37c]"></a>prvSwitchTimerLists</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, timers.o(i.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[c2]"></a>prvTimerTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timers.o(i.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(i.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[34c]"></a>inHandlerMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cmsis_os.o(i.inHandlerMode))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadResume
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osPoolAlloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessagePut
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageGet
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreDelete
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexWait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>

<P><STRONG><a name="[354]"></a>makeFreeRtosPriority</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cmsis_os.o(i.makeFreeRtosPriority))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
</UL>

<P><STRONG><a name="[381]"></a>prvHeapInit</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[382]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[be]"></a>prvTaskExitError</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[2db]"></a>nwkEventNotify</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, nwk_manage.o(i.nwkEventNotify))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
</UL>

<P><STRONG><a name="[2da]"></a>nwkResetHalStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nwk_manage.o(i.nwkResetHalStatus))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
</UL>

<P><STRONG><a name="[2d9]"></a>nwkSetHalStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nwk_manage.o(i.nwkSetHalStatus))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
</UL>

<P><STRONG><a name="[2f2]"></a>timerInsert</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, timer_subsystem.o(i.timerInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timerInsert &rArr; gatListAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
</UL>

<P><STRONG><a name="[2f1]"></a>timerNodeInit</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, timer_subsystem.o(i.timerNodeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = timerNodeInit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
</UL>

<P><STRONG><a name="[2ef]"></a>timerRemove</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, timer_subsystem.o(i.timerRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = timerRemove &rArr; gatListDel
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTick
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
</UL>

<P><STRONG><a name="[2f4]"></a>timerTriggerNotifyLp</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, timer_subsystem.o(i.timerTriggerNotifyLp))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = timerTriggerNotifyLp &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTick
</UL>

<P><STRONG><a name="[2f0]"></a>timerUpdataExpire</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, timer_subsystem.o(i.timerUpdataExpire))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = timerUpdataExpire &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerTick
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
</UL>

<P><STRONG><a name="[249]"></a>gatConfigInfoExtracFromEnv</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, productinfo.o(i.gatConfigInfoExtracFromEnv))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = gatConfigInfoExtracFromEnv &rArr; getKeyValue &rArr; getKeyValueCustom &rArr; findKey &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataGet
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKeyValue
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
</UL>

<P><STRONG><a name="[24a]"></a>gatConfigInfoSaveToEnv</STRONG> (Thumb, 282 bytes, Stack size 312 bytes, productinfo.o(i.gatConfigInfoSaveToEnv))
<BR><BR>[Stack]<UL><LI>Max Depth = 2552<LI>Call Chain = gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEnvErase
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatEnvWrite
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoUpdateFromEnv
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
</UL>

<P><STRONG><a name="[21a]"></a>gagentDataReceived</STRONG> (Thumb, 306 bytes, Stack size 56 bytes, gagent.o(i.gagentDataReceived))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = gagentDataReceived &rArr; gatDataSend &rArr; gatCloudGizDataSend &rArr; mqttSendPubData &rArr; mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gizIssuedProcess
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryptDisplay
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataRecCb
</UL>

<P><STRONG><a name="[250]"></a>gatDataRecCb</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, gagent.o(i.gatDataRecCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = gatDataRecCb &rArr; gagentDataReceived &rArr; gatDataSend &rArr; gatCloudGizDataSend &rArr; mqttSendPubData &rArr; mqtt_publish_with_qos &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gagentDataReceived
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryptDisplay
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload93
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDealUserPayload90
</UL>

<P><STRONG><a name="[96]"></a>gatDataSendCb</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, gagent.o(i.gatDataSendCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gatDataSendCb &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDataSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gagent.o(i.gatDataSend)
</UL>
<P><STRONG><a name="[a3]"></a>gatLocalSendStatus</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, local.o(i.gatLocalSendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gatLocalSendStatus &rArr; gatLocalSignalTickStart &rArr; gatTimerAdd &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gizWiFiStatus
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSignalTickStart
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLocalSignalTickClose
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nwkHalStatusGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> local.o(i.gatLocalInit)
</UL>
<P><STRONG><a name="[92]"></a>gatLocalStatusSync</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, local.o(i.gatLocalStatusSync))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatLocalStatusSync &rArr; gizWiFiStatus &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gizWiFiStatus
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusGet
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> local.o(i.gagentInit)
</UL>
<P><STRONG><a name="[ad]"></a>gatNetExcepTimeout</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gatnet.o(i.gatNetExcepTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 2584<LI>Call Chain = gatNetExcepTimeout &rArr; gatReBoot &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReBoot
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatnet.o(i.gatNetEventHandle)
</UL>
<P><STRONG><a name="[2c4]"></a>gatRouterUpdateInfo</STRONG> (Thumb, 534 bytes, Stack size 40 bytes, gatnet.o(i.gatRouterUpdateInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 2600<LI>Call Chain = gatRouterUpdateInfo &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetConnParaGet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheSSIDSet
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheSSIDGet
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCachePwdSet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCachePwdGet
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheBSSIDSet
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetCacheBSSIDGet
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupSSIDSet
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupSSIDGet
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupPwdSet
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupPwdGet
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupBSSIDSet
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetBackupBSSIDGet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetEventHandle
</UL>

<P><STRONG><a name="[94]"></a>simulatorLanDataUploadCB</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, simulatorcomm.o(i.simulatorLanDataUploadCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = simulatorLanDataUploadCB &rArr; simulatorUploadDtatCb &rArr; gatTimerDel &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulatorUploadDtatCb
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simulatorcomm.o(i.gagentUploadData)
</UL>
<P><STRONG><a name="[383]"></a>simulatorUploadDtatCb</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, simulatorcomm.o(i.simulatorUploadDtatCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = simulatorUploadDtatCb &rArr; gatTimerDel &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulatorM2MUploadDataCb
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simulatorLanDataUploadCB
</UL>

<P><STRONG><a name="[256]"></a>gatDelTcpDataNode</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, tcp.o(i.gatDelTcpDataNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gatDelTcpDataNode &rArr; iofUnlock &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListDel
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpRecHandle
</UL>

<P><STRONG><a name="[2e1]"></a>gatTcpChNodeInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tcp.o(i.gatTcpChNodeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatTcpChNodeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListHeadInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpListenAdd
</UL>

<P><STRONG><a name="[2e2]"></a>gatTcpDataNodeInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tcp.o(i.gatTcpDataNodeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatTcpDataNodeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListHeadInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
</UL>

<P><STRONG><a name="[2e7]"></a>gatTcpRecResult</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, tcp.o(i.gatTcpRecResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = gatTcpRecResult &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpRecv
</UL>

<P><STRONG><a name="[2ec]"></a>gatTcpSendNodeInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tcp.o(i.gatTcpSendNodeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatTcpSendNodeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListHeadInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
</UL>

<P><STRONG><a name="[2ed]"></a>tcpSendListAdd</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tcp.o(i.tcpSendListAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = tcpSendListAdd &rArr; tcpTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpTrigSend
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListAddTail
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
</UL>

<P><STRONG><a name="[1a1]"></a>Http_getdomain_port</STRONG> (Thumb, 168 bytes, Stack size 280 bytes, gserver.o(i.Http_getdomain_port))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = Http_getdomain_port &rArr; getKeyValue &rArr; getKeyValueCustom &rArr; findKey &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKeyValue
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
</UL>

<P><STRONG><a name="[b0]"></a>gatDeviceDisableRecCb</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, gserver.o(i.gatDeviceDisableRecCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 2616<LI>Call Chain = gatDeviceDisableRecCb &rArr; gatNormalDeviceDisableParse &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseRescode
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisableParse
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gserver.o(i.gatNormalDeviceDisable)
</UL>
<P><STRONG><a name="[9d]"></a>gatGServerHandleGatStatus</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, gserver.o(i.gatGServerHandleGatStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 2736<LI>Call Chain = gatGServerHandleGatStatus &rArr; gatGServerStart &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gserver.o(i.gatGServerInit)
</UL>
<P><STRONG><a name="[259]"></a>gatNormalDeviceDisableParse</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gserver.o(i.gatNormalDeviceDisableParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 2584<LI>Call Chain = gatNormalDeviceDisableParse &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDeviceDisableRecCb
</UL>

<P><STRONG><a name="[b2]"></a>gatNtpTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gserver.o(i.gatNtpTick))
<BR>[Address Reference Count : 1]<UL><LI> gserver.o(i.gatProvisionParse)
</UL>
<P><STRONG><a name="[2cf]"></a>gatProvisionParse</STRONG> (Thumb, 190 bytes, Stack size 64 bytes, gserver.o(i.gatProvisionParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = gatProvisionParse &rArr; Http_getdomain_port &rArr; getKeyValue &rArr; getKeyValueCustom &rArr; findKey &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataGet
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_getdomain_port
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKeyValue
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionRecCb
</UL>

<P><STRONG><a name="[b1]"></a>gatProvisionRecCb</STRONG> (Thumb, 424 bytes, Stack size 128 bytes, gserver.o(i.gatProvisionRecCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = gatProvisionRecCb &rArr; gatProvisionParse &rArr; Http_getdomain_port &rArr; getKeyValue &rArr; getKeyValueCustom &rArr; findKey &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseRescode
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetM2MPort
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetM2MDomain
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStart
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReInit
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostByName
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvisionParse
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNormalDeviceDisable
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusGet
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gserver.o(i.gatProvision)
</UL>
<P><STRONG><a name="[b3]"></a>gatProvisionTimer</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gserver.o(i.gatProvisionTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = gatProvisionTimer &rArr; gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gserver.o(i.gatProvisionRecCb)
</UL>
<P><STRONG><a name="[2d3]"></a>gatRegsiterParse</STRONG> (Thumb, 196 bytes, Stack size 96 bytes, gserver.o(i.gatRegsiterParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 2656<LI>Call Chain = gatRegsiterParse &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Http_Decrypt_RES
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKeyValue
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryptDisplay
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterRecCb
</UL>

<P><STRONG><a name="[9f]"></a>gatRegsiterRecCb</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, gserver.o(i.gatRegsiterRecCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 2696<LI>Call Chain = gatRegsiterRecCb &rArr; gatRegsiterParse &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRunTimeDataGet
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseRescode
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProvision
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiterParse
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatConfigFlagSet
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gserver.o(i.gatGServerStart)
<LI> gserver.o(i.gatRegsiterTimer)
</UL>
<P><STRONG><a name="[b5]"></a>gatRegsiterTimer</STRONG> (Thumb, 216 bytes, Stack size 96 bytes, gserver.o(i.gatRegsiterTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 2704<LI>Call Chain = gatRegsiterTimer &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexToStr
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostByName
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gserver.o(i.gatRegsiterRecCb)
</UL>
<P><STRONG><a name="[9e]"></a>gserverDnsCb</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gserver.o(i.gserverDnsCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 2736<LI>Call Chain = gserverDnsCb &rArr; gatGServerStart &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGServerStart
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoSetGServerIp
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatStatusGet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gserver.o(i.gatGServerStart)
<LI> gserver.o(i.gatProvisionRecCb)
<LI> gserver.o(i.gatRegsiterTimer)
</UL>
<P><STRONG><a name="[9c]"></a>gserverExcepTimeout</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gserver.o(i.gserverExcepTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 2592<LI>Call Chain = gserverExcepTimeout &rArr; gatReBoot &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatLanLoginClientNumGet
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReBoot
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gserver.o(i.gatGServerHandleGatStatus)
</UL>
<P><STRONG><a name="[2d2]"></a>packRegPkt</STRONG> (Thumb, 1624 bytes, Stack size 120 bytes, gserver.o(i.packRegPkt))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = packRegPkt &rArr; aesECB128Encrypt &rArr; cipher &rArr; mix_columns &rArr; coef_mult &rArr; gmult
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesInit
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesECB128Encrypt
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aesDestroy
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strToHex
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRegsiter
</UL>

<P><STRONG><a name="[a9]"></a>gatM2MHandleGatStatus</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gatm2m.o(i.gatM2MHandleGatStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = gatM2MHandleGatStatus &rArr; gatM2MReStartServer &rArr; gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStop
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServer
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatm2m.o(i.gatM2MInit)
</UL>
<P><STRONG><a name="[aa]"></a>gatM2MReStartServerTimeOut</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gatm2m.o(i.gatM2MReStartServerTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = gatM2MReStartServerTimeOut &rArr; gatM2MReStartServer &rArr; gatProvision &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStart
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MReStartServer
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gatm2m.o(i.gatM2MReStartServer)
<LI> gatm2m.o(i.m2mSktConnCb)
</UL>
<P><STRONG><a name="[ab]"></a>gatm2mDnsCb</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gatm2m.o(i.gatm2mDnsCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = gatm2mDnsCb &rArr; gatM2MServerStart &rArr; gatM2MSocketConnect &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatM2MServerStart
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoSet
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m2mInfoGet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatm2m.o(i.gatM2MServerStart)
</UL>
<P><STRONG><a name="[bd]"></a>m2mSend</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, gatm2m.o(i.m2mSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = m2mSend &rArr; gatTcpSend &rArr; tcpSendListAdd &rArr; tcpTrigSend &rArr; semV &rArr; semOp &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpSend
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatm2m.o(i.m2mSktConnCb)
</UL>
<P><STRONG><a name="[33d]"></a>mqttNodeRecInit</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, mqttgat.o(i.mqttNodeRecInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = mqttNodeRecInit &rArr; mqtt_parse_publish_msg &rArr; mqtt_parse_pub_msg_ptr &rArr; mqtt_parse_rem_len
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_publish_msg
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_pub_topic_ptr
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_parse_msg_id
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqttExtractPacket
</UL>

<P><STRONG><a name="[1e9]"></a>_adapteDnsReq</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gdns.o(i._adapteDnsReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _adapteDnsReq &rArr; iofGatGetHostByName &rArr; iofGetHostByName &rArr; WIFI_GetHostAddress &rArr; ES_WIFI_DNS_LookUp &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofGatGetHostByName
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getDnsReqByName
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDnsTask
</UL>

<P><STRONG><a name="[1ec]"></a>_dnsIpFound</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gdns.o(i._dnsIpFound))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _dnsIpFound &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsResultCb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsResult
</UL>

<P><STRONG><a name="[1ee]"></a>_dnsIpNotFound</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gdns.o(i._dnsIpNotFound))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _dnsIpNotFound &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsResultCb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsResult
</UL>

<P><STRONG><a name="[1ef]"></a>_dnsRegister</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, gdns.o(i._dnsRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _dnsRegister &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDevTime_S
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostByName
</UL>

<P><STRONG><a name="[91]"></a>_dnsResult</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gdns.o(i._dnsResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _dnsResult &rArr; _getDnsReqByName &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dnsDataDump
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getDnsReqByName
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsIpNotFound
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsIpFound
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gdns.o(i._adapteDnsReq)
</UL>
<P><STRONG><a name="[1ed]"></a>_dnsResultCb</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gdns.o(i._dnsResultCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _dnsResultCb
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsIpNotFound
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsIpFound
</UL>

<P><STRONG><a name="[97]"></a>_dnsTick</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, gdns.o(i._dnsTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _dnsTick &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gdns.o(i.gatDnsTask)
</UL>
<P><STRONG><a name="[1ea]"></a>_getDnsReqByName</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gdns.o(i._getDnsReqByName))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _getDnsReqByName &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dnsResult
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adapteDnsReq
</UL>

<P><STRONG><a name="[218]"></a>findKey</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, gatutilcode.o(i.findKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = findKey &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKeyValueCustom
</UL>

<P><STRONG><a name="[219]"></a>findValue</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, gatutilcode.o(i.findValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = findValue
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKeyValueCustom
</UL>

<P><STRONG><a name="[208]"></a>getDevCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dp.o(i.getDevCmd))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dpTrans
</UL>

<P><STRONG><a name="[206]"></a>getLanCmd</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, dp.o(i.getLanCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = getLanCmd &rArr; ntohs &rArr; checkCPUendian
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dpTrans
</UL>

<P><STRONG><a name="[207]"></a>getWanCmd</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, dp.o(i.getWanCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = getWanCmd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntohs
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mqtt_num_rem_len_bytes
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dpTrans
</UL>

<P><STRONG><a name="[ba]"></a>gatHTTPRecvTick</STRONG> (Thumb, 188 bytes, Stack size 64 bytes, httpgat.o(i.gatHTTPRecvTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = gatHTTPRecvTick &rArr; gatTcpClrChNode &rArr; gatIofSocketClose &rArr; WIFI_CloseClientConnection &rArr; ES_WIFI_StopClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofUnlock
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofLock
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatIofSocketClose
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTcpClrChNode
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerDel
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpDelSendNode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> httpgat.o(i.httpConnCb)
<LI> httpgat.o(i.httpRecCb)
</UL>
<P><STRONG><a name="[303]"></a>httpBody</STRONG> (Thumb, 776 bytes, Stack size 56 bytes, httpgat.o(i.httpBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = httpBody &rArr; httpParsingBlkLen &rArr; strtoul &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParsingBlkLen
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[306]"></a>httpHeader</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, httpgat.o(i.httpHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = httpHeader &rArr; httpParseHead &rArr; strtoul &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseHead
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[307]"></a>httpParseHead</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, httpgat.o(i.httpParseHead))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = httpParseHead &rArr; strtoul &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpHeader
</UL>

<P><STRONG><a name="[304]"></a>httpParsingBlkLen</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, httpgat.o(i.httpParsingBlkLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = httpParsingBlkLen &rArr; strtoul &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpBody
</UL>

<P><STRONG><a name="[283]"></a>httpPkgLenCalc</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, httpgat.o(i.httpPkgLenCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = httpPkgLenCalc &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
</UL>

<P><STRONG><a name="[284]"></a>httpPkgPack</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, httpgat.o(i.httpPkgPack))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = httpPkgPack &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
</UL>

<P><STRONG><a name="[308]"></a>httpRecNodeInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, httpgat.o(i.httpRecNodeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = httpRecNodeInit &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListHeadInit
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[282]"></a>httpSendNodeInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, httpgat.o(i.httpSendNodeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = httpSendNodeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatListHeadInit
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
</UL>

<P><STRONG><a name="[309]"></a>httpSendResult</STRONG> (Thumb, 46 bytes, Stack size 48 bytes, httpgat.o(i.httpSendResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = httpSendResult &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatMsgId
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofSendSig
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpRecCb
</UL>

<P><STRONG><a name="[238]"></a>gatAuthKeySet</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, authorization.o(i.gatAuthKeySet))
<BR><BR>[Stack]<UL><LI>Max Depth = 2592<LI>Call Chain = gatAuthKeySet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatRecAuthKey
</UL>

<P><STRONG><a name="[237]"></a>gatReqAuthKey</STRONG> (Thumb, 272 bytes, Stack size 312 bytes, authorization.o(i.gatReqAuthKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 2920<LI>Call Chain = gatReqAuthKey &rArr; gatAuthkeyGet &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatNetMACGet
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthkeyGet
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetSoftVer
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductDefaultInfoGet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatAuthInit
</UL>

<P><STRONG><a name="[b6]"></a>gatReqAuthKeyTimeOut</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, authorization.o(i.gatReqAuthKeyTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatReqAuthKeyTimeOut &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResetCurMode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> authorization.o(i.gatReqAuthKey)
</UL>
<P><STRONG><a name="[a0]"></a>gatWaitAuthKeyTimer</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, authorization.o(i.gatWaitAuthKeyTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatWaitAuthKeyTimer &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatResetCurMode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> authorization.o(i.gatGetAuthReqAck)
</UL>
<P><STRONG><a name="[9b]"></a>gagentRebootTimer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, localcomm.o(i.gagentRebootTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 2568<LI>Call Chain = gagentRebootTimer &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devRestart
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductConfiInfoSave
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> localcomm.o(i.gatFactoryMode)
<LI> localcomm.o(i.gatLocalGAgentRestart)
</UL>
<P><STRONG><a name="[99]"></a>gatEnableBindTimeOut</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, localcomm.o(i.gatEnableBindTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = gatEnableBindTimeOut &rArr; gatSetNwkEvent &rArr; nwkEventNotify &rArr; iofSendSig &rArr; osMessagePut &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatSetNwkEvent
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> localcomm.o(i.gatEnableBindStart)
</UL>
<P><STRONG><a name="[32e]"></a>newLocalSn</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, localprotocol.o(i.newLocalSn))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localWriteP0
</UL>

<P><STRONG><a name="[b4]"></a>gatDownLoadFirmwareCb</STRONG> (Thumb, 1842 bytes, Stack size 104 bytes, otawan.o(i.gatDownLoadFirmwareCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 2680<LI>Call Chain = gatDownLoadFirmwareCb &rArr; devOtaUpgrade &rArr; gatSaveRebootReason &rArr; gatProductConfiInfoSave &rArr; gatConfigInfoSaveToEnv &rArr; gatEnvWrite &rArr; iofFileWrite &rArr; FLASH_update &rArr; FLASH_write_at &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileWrite
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileOpen
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iofFileClose
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devOtaUpgrade
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Update
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAgent_MD5Final
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReBoot
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatTimerAdd
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWanOtaParmGet
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMD5
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetFileType
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWanOtaStatusSet
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> otawan.o(i.gatReDownloadTimerCb)
<LI> otawan.o(i.gatReqLastVersionCb)
</UL>
<P><STRONG><a name="[265]"></a>gatDownloadFirmware</STRONG> (Thumb, 128 bytes, Stack size 320 bytes, otawan.o(i.gatDownloadFirmware))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = gatDownloadFirmware &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWanOtaStatusSet
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReDownloadTimerCb
</UL>

<P><STRONG><a name="[27b]"></a>gatGetHostFromUrl</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, otawan.o(i.gatGetHostFromUrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatGetHostFromUrl &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
</UL>

<P><STRONG><a name="[2cc]"></a>gatOtaSoftVerify</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, otawan.o(i.gatOtaSoftVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = gatOtaSoftVerify &rArr; getKeyValue &rArr; getKeyValueCustom &rArr; findKey &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKeyValue
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
</UL>

<P><STRONG><a name="[98]"></a>gatReDownloadTimerCb</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, otawan.o(i.gatReDownloadTimerCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = gatReDownloadTimerCb &rArr; gatDownloadFirmware &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWanOtaParmGet
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownloadFirmware
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> otawan.o(i.gatDownLoadFirmwareCb)
</UL>
<P><STRONG><a name="[25e]"></a>gatReqLastVersion</STRONG> (Thumb, 186 bytes, Stack size 280 bytes, otawan.o(i.gatReqLastVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = gatReqLastVersion &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatHttpReq
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOTAEventHandle
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[b7]"></a>gatReqLastVersionCb</STRONG> (Thumb, 560 bytes, Stack size 576 bytes, otawan.o(i.gatReqLastVersionCb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = gatReqLastVersionCb &rArr; gatDownloadFirmware &rArr; gatHttpReq &rArr; gatIofSocketConnect &rArr; WIFI_OpenClientConnection &rArr; ES_WIFI_StartClientConnection &rArr; AT_ExecuteCommand &rArr; osMutexWait &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpParseRescode
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetMcuInfo
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetSoftVer
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatProductInfoGet
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatWanOtaParmReset
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersion
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatOtaSoftVerify
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatGetHostFromUrl
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownloadFirmware
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> otawan.o(i.gatReqLastVersion)
</UL>
<P><STRONG><a name="[2d4]"></a>gatWanOtaParmReset</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, otawan.o(i.gatWanOtaParmReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatWanOtaParmReset &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatReqLastVersionCb
</UL>

<P><STRONG><a name="[25c]"></a>gatWanOtaStatusSet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, otawan.o(i.gatWanOtaStatusSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatWanOtaStatusSet &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownloadFirmware
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatDownLoadFirmwareCb
</UL>

<P><STRONG><a name="[1e7]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[1f6]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1f5]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[90]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL>
<P><STRONG><a name="[7c]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
